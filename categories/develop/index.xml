<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>develop on 我的日记</title><link>http://blog.heyuhua.com/categories/develop/</link><description>Recent content in develop on 我的日记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>何育华版权所有</copyright><lastBuildDate>Tue, 14 Jan 2020 11:35:58 +0800</lastBuildDate><atom:link href="http://blog.heyuhua.com/categories/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>从kubelet Cgroup 管理流程入手</title><link>http://blog.heyuhua.com/p/%E4%BB%8Ekubelet-cgroup-%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B%E5%85%A5%E6%89%8B/</link><pubDate>Tue, 14 Jan 2020 11:35:58 +0800</pubDate><guid>http://blog.heyuhua.com/p/%E4%BB%8Ekubelet-cgroup-%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B%E5%85%A5%E6%89%8B/</guid><description>&lt;p>新年第一个flag: 春节期间《缺氧》能解决气体和液体供应问题。&lt;/p>
&lt;blockquote>
&lt;p>本文基于 k8s 近期 release, git: commit 70132b0f130acc0bed193d9ba59dd186f0e634cf (HEAD, tag: v1.17.0)&lt;/p>
&lt;/blockquote>
&lt;h2 id="前言寻找可能性------混编-vm-与-pod-cgroup">前言：寻找可能性 &amp;mdash;- 混编 VM 与 Pod cgroup&lt;/h2>
&lt;p>想象 k8s 可以同时管理 VM 资源了
如何将 vm 资源的cpu，内存配置抽象成 cgroup 并使用 kubelet CgroupManager 统一管理?&lt;/p>
&lt;h2 id="kubelet-的-cgroup-管理模型">kubelet 的 Cgroup 管理模型&lt;/h2>
&lt;p>kubelet 作为 k8s 系统中各个节点的“话事者”，其 &lt;code>ContainerManger&lt;/code> 模块包揽了所有的 cgroup 管理工作。
ContainerManager 将 Pod 的 cgroup 模型做了层次分离： container -&amp;gt; Pod -&amp;gt; Qos -&amp;gt; Node。&lt;/p>
&lt;h3 id="node-level">Node level&lt;/h3>
&lt;p>节点层面 主要聚焦于 cgroup 横向分配， 通过隔离不同类型 的 cgroup 进行抽象。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> Node Capacity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ---------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | kube-reserved |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |-------------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | system-reserved |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |-------------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | eviction-threshold |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |-------------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | allocatable |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | (available for pods) |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ---------------------------
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>默认情况下 节点粒度的管理 分配了 k8s 服务组件的 cgroup， 系统非内核 进程 cgroup， 还有 pod 资源的 cgroup.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">kubeDeps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ContainerManager&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewContainerManager&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">kubeDeps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Mounter&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">kubeDeps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CAdvisorInterface&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NodeConfig&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">RuntimeCgroupsName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RuntimeCgroups&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// `runtime-cghroups` 配置, 创建和运行容器运行时的 cgroup 的绝对名称
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">SystemCgroupsName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SystemCgroups&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// cgroup 的绝对名称，用于所有尚未放置在根目录下某 cgroup 内的非内核进程。空值表示不指定 cgroup。回滚该参数需要重启机器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">KubeletCgroupsName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">KubeletCgroups&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 用于创建和运行 kubelet 的 cgroup 的绝对名称。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">ContainerRuntime&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ContainerRuntime&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">CgroupsPerQOS&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CgroupsPerQOS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 将 Pod 按照不同的 QOS 优先级进行 cgroup 拆分。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">CgroupRoot&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CgroupRoot&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">CgroupDriver&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CgroupDriver&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">KubeletRootDir&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RootDirectory&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ProtectKernelDefaults&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ProtectKernelDefaults&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">NodeAllocatableConfig&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NodeAllocatableConfig&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="c1">// 节点可分配 resource 计算结构体
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">KubeReservedCgroupName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">KubeReservedCgroup&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// k8s 自身服务 所在 cgroup
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">SystemReservedCgroupName&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SystemReservedCgroup&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 操作系统非内核进程外的其他进程所在cgroup
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">EnforceNodeAllocatable&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">sets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">EnforceNodeAllocatable&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1">// `enforce-node-allocatable` 参数设置，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">KubeReserved&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">kubeReserved&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">SystemReserved&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">systemReserved&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ReservedSystemCPUs&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">reservedSystemCPUs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 预留给节点其他无关进程的 cpu.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">HardEvictionThresholds&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">hardEvictionThresholds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">QOSReserved&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">experimentalQOSReserved&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ExperimentalCPUManagerPolicy&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CPUManagerPolicy&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ExperimentalCPUManagerReconcilePeriod&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CPUManagerReconcilePeriod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Duration&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ExperimentalPodPidsLimit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodPidsLimit&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">EnforceCPULimits&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CPUCFSQuota&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">CPUCFSQuotaPeriod&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CPUCFSQuotaPeriod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Duration&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ExperimentalTopologyManagerPolicy&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TopologyManagerPolicy&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FailSwapOn&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">devicePluginEnabled&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">kubeDeps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Recorder&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过如上 模块设计， Pod 的 allocatable resource 可以通过简单的减法运算得出&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>allocatable = NodeCapacity - [kube-reserved] - [system-reserved] - [eviction-threshold]&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>我们的测试集群目前配置如下：&lt;/p>
&lt;ul>
&lt;li>CgroupDriver : systemd&lt;/li>
&lt;li>SystemCgroups: /system.slice&lt;/li>
&lt;li>KubeletCgroups: /system.slice&lt;/li>
&lt;li>SystemReservedCgroups: /system.slice&lt;/li>
&lt;li>KubeReservedCgroups: /system.slice/kubelet.service&lt;/li>
&lt;/ul>
&lt;p>额外的：&lt;/p>
&lt;ul>
&lt;li>VM 相关 cgroup 配置位于 /system.slice/machine.slice， 需要纳入 node的 统一管理。&lt;/li>
&lt;/ul>
&lt;h3 id="qos-level">QOS level&lt;/h3>
&lt;p>在上一节 Node 相关配置中， &lt;code>--cgroup-per-qos&lt;/code> 配置（默认为 true） 会生成该层级的 Cgroup 配置。&lt;/p>
&lt;p>目前 QOS 共分为 3 种。&lt;/p>
&lt;p>qos 级别&lt;/p>
&lt;ul>
&lt;li>Guaranteed【老板（我要的都是我的）】：pod 里每个容器都必须设定 &lt;code>request&lt;/code> 和 &lt;code>limit&lt;/code>，并且值必须相同&lt;/li>
&lt;li>Burstable 【洗碗工（底薪+提成）】：pod 里至少有一个容器的 cpu 或者 memory 设置了 &lt;code>request&lt;/code> 值&lt;/li>
&lt;li>BestEffort【切格瓦拉（能偷到的都是我的）】：POD 的所有容器都没有指定CPU和内存的 &lt;code>request&lt;/code> 和 &lt;code>limit&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>初始化过程发生在 &lt;code>kl.containerLogManager.Start() &amp;gt; setupNode&lt;/code> 过程：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Setup top level qos containers only if CgroupsPerQOS flag is specified as true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NodeConfig&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CgroupsPerQOS&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">createNodeAllocatableCgroups&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosContainerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getNodeAllocatableAbsolute&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">activePods&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;failed to initialize top level QOS containers: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>createNodeAllocatableCgroups&lt;/code> 会初始化 一个 &lt;code>system.slice/kubepods.slice&lt;/code> cgroup, 用于放置 pod 资源&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Top level for Qos containers are created only for Burstable
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// and Best Effort classes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">qosClasses&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSClass&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">CgroupName&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBurstable&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">NewCgroupName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rootContainer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ToLower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBurstable&lt;/span>&lt;span class="p">))),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBestEffort&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">NewCgroupName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rootContainer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ToLower&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBestEffort&lt;/span>&lt;span class="p">))),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Store the top level qos container names
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosContainersInfo&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">QOSContainersInfo&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Guaranteed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">rootContainer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Burstable&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">qosClasses&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBurstable&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">BestEffort&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">qosClasses&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBestEffort&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>初始化后 &lt;code>Burstable&lt;/code> 和 &lt;code>BestEffort&lt;/code>类型的pod cgroup 会被生成在， &lt;code>/system.slice/kubepods.slice&lt;/code> 下。&lt;/p>
&lt;p>而 &lt;code>guaranteed&lt;/code> 类型 pod 会直接 运行在 /system.slice/kubepods.slice 下.&lt;/p>
&lt;p>这里发生了 kubelet 层的第一次 cgroup 设置： &lt;code>BestEffort&lt;/code>其中的 cpu.shares 被设置为minShares(=2).&lt;/p>
&lt;p>表示 在 cpu高负载情况下， BestEffort. Pod 将会享有 pod中最少的的cpu时间段。&lt;/p>
&lt;p>同时，在containerManager start 之后， 还会有一个常驻go程 循环执行 &lt;code>UpdateCgroups()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">qosContainerManagerImpl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">UpdateCgroups&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Lock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unlock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">qosConfigs&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSClass&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">CgroupConfig&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBurstable&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosContainersInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Burstable&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ResourceParameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">ResourceConfig&lt;/span>&lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodQOSBestEffort&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosContainersInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BestEffort&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ResourceParameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">ResourceConfig&lt;/span>&lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// update the qos level cgroup settings for cpu shares
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">setCPUCgroupConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">qosConfigs&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// update the qos level cgroup settings for huge pages (ensure they remain unbounded)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">setHugePagesConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">qosConfigs&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">utilfeature&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DefaultFeatureGate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Enabled&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">kubefeatures&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">QOSReserved&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">resource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">percentReserve&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosReserved&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">resource&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResourceMemory&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">setMemoryReserve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">qosConfigs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">percentReserve&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">updateSuccess&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">qosConfigs&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cgroupManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">updateSuccess&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">updateSuccess&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">klog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">V&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Infof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;[ContainerManager]: Updated QoS cgroup configuration&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// If the resource can adjust the ResourceConfig to increase likelihood of
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// success, call the adjustment function here. Otherwise, the Update() will
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// be called again with the same values.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">resource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">percentReserve&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">qosReserved&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">resource&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResourceMemory&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">retrySetMemoryReserve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">qosConfigs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">percentReserve&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">qosConfigs&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cgroupManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">klog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;[ContainerManager]: Failed to update QoS cgroup configuration&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">klog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">V&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Infof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;[ContainerManager]: Updated QoS cgroup configuration&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>该流程保证了 kubepod 相关meta配置不被串改。&lt;/p>
&lt;h3 id="pod-level">Pod level&lt;/h3>
&lt;p>上两层的 cgroup 配置 大多属于模块划分相关的内容， Pod level 的 cgroup 配置 则更接近于 k8s 需要着重了解的一层。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Create Cgroups for the pod and apply resource parameters
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// to them if cgroups-per-qos flag is enabled.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// TODO(yuhua): pod cgroup 创建
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pcm := kl.containerManager.NewPodContainerManager()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// If pod has already been terminated then we need not create
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// or update the pod&amp;#39;s cgroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if !kl.podIsTerminated(pod) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // When the kubelet is restarted with the cgroups-per-qos
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // flag enabled, all the pod&amp;#39;s running containers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // should be killed intermittently and brought back up
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // under the qos cgroup hierarchy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Check if this is the pod&amp;#39;s first sync
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> firstSync := true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for _, containerStatus := range apiPodStatus.ContainerStatuses {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if containerStatus.State.Running != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> firstSync = false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> break
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Don&amp;#39;t kill containers in pod if pod&amp;#39;s cgroups already
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // exists or the pod is running for the first time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> podKilled := false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if !pcm.Exists(pod) &amp;amp;&amp;amp; !firstSync {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if err := kl.killPod(pod, nil, podStatus, nil); err == nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> podKilled = true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Create and Update pod&amp;#39;s Cgroups
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Don&amp;#39;t create cgroups for run once pod if it was killed above
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // The current policy is not to restart the run once pods when
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // the kubelet is restarted with the new flag as run once pods are
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // expected to run only once and if the kubelet is restarted then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // they are not expected to run again.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // We don&amp;#39;t create and apply updates to cgroup if its a run once pod and was killed above
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if !(podKilled &amp;amp;&amp;amp; pod.Spec.RestartPolicy == v1.RestartPolicyNever) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if !pcm.Exists(pod) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if err := kl.containerManager.UpdateQOSCgroups(); err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> klog.V(2).Infof(&amp;#34;Failed to update QoS cgroups while syncing pod: %v&amp;#34;, err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if err := pcm.EnsureExists(pod); err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> kl.recorder.Eventf(pod, v1.EventTypeWarning, events.FailedToCreatePodContainer, &amp;#34;unable to ensure pod container exists: %v&amp;#34;, err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return fmt.Errorf(&amp;#34;failed to ensure that the pod: %v cgroups exist and are correctly applied: %v&amp;#34;, pod.UID, err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上述流程我们需要关注的是 如下几个流程&lt;/p>
&lt;blockquote>
&lt;p>syncPod -&amp;gt; kl.containerManager.NewPodContainerManager() -&amp;gt; pcm.Exists(pod) -&amp;gt; kl.containerManager.UpdateQOSCgroups()&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>NewPodContainerManager&lt;/code> 并没有实质性的cgroup操作，紧跟着的判断 &lt;code>Exists(pod)&lt;/code>-&amp;gt; &lt;code>GetPodContainerName&lt;/code>函数调用会尝试获取 当前 pod应当存在的 cgroup路径。并检查 pod 对应cgroup的存在。&lt;/p>
&lt;p>如果发现不存在 对应cgroup 则进入创建流程 【创建cgroup 发生在 pod其他资源创建前】， 即 &lt;code>UpdateQOSChroups&lt;/code>:&lt;/p>
&lt;p>还函数会进行：&lt;/p>
&lt;ul>
&lt;li>&lt;code>setCPUCgroupConfig&lt;/code> 比如说保证 BestEffort pod cpu share =2; 计算 Burst.slice 路径 cpu shares 设置应该为 &lt;strong>所有 burstable_pod_CPU_request&lt;/strong> 的和。&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>&lt;code>setMemoryReserve&lt;/code> 取决于是否开启了特性功能 &lt;strong>QOSReserved&lt;/strong>, 该功能会为 &lt;strong>Burstable&lt;/strong> 和 &lt;strong>BestEffort&lt;/strong> pod slice 设置 可用内存上限， 基于实时计算的各个类型的 pod的 内存使用状况。 【暂定默认关闭】&lt;/li>
&lt;li>&lt;code>setHugePagesConfig&lt;/code> 根据功能开关设置 hugepage 用量。【暂定默认关闭】&lt;/li>
&lt;/ul>
&lt;p>上述动作完成后 将会执行 pod 粒度 的 cgroup 创建， 更新操作 &lt;code>EnsureExists&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">EnsureExists&lt;/span> &lt;span class="n">takes&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">argument&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">makes&lt;/span> &lt;span class="n">sure&lt;/span> &lt;span class="n">that&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">cgroup&lt;/span> &lt;span class="n">exists&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">qos&lt;/span> &lt;span class="n">cgroup&lt;/span> &lt;span class="n">hierarchy&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">enabled&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">If&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">doesn&lt;/span>&lt;span class="s1">&amp;#39;t already exist it is created.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">podContainerManagerImpl&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">EnsureExists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Pod&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">podContainerName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetPodContainerName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">check&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">already&lt;/span> &lt;span class="n">exist&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">alreadyExists&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">alreadyExists&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Create&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">container&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">containerConfig&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">CgroupConfig&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">podContainerName&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ResourceParameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ResourceConfigForPod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">enforceCPULimits&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpuCFSQuotaPeriod&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">utilfeature&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultFeatureGate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Enabled&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">kubefeatures&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SupportPodPidsLimit&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">podPidsLimit&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">containerConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ResourceParameters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PidsLimit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">podPidsLimit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cgroupManager&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">containerConfig&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;failed to create container for %v : %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podContainerName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Apply&lt;/span> &lt;span class="n">appropriate&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="n">limits&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">container&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Top&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="n">qos&lt;/span> &lt;span class="n">containers&lt;/span> &lt;span class="n">limits&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">updated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">until&lt;/span> &lt;span class="n">we&lt;/span> &lt;span class="n">figure&lt;/span> &lt;span class="n">how&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">maintain&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">desired&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Because&lt;/span> &lt;span class="n">maintaining&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">desired&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">difficult&lt;/span> &lt;span class="n">without&lt;/span> &lt;span class="n">checkpointing&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">applyLimits&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;failed to apply resource limits on container for %v : %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podContainerName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上述代码中 &lt;code>m.cgroupManager.Create(containerConfig&lt;/code> 可以完成 pod 级别的 cgroup创建， 至此我们的 pod cgroup container 已经初具雏形。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node1&lt;span class="o">]&lt;/span>&lt;span class="c1"># tree /sys/fs/cgroup/cpu -d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/sys/fs/cgroup/cpu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── kubepods
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── besteffort
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── pode098d78945a4d359594f9c27066aa202
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   │   ├── 5fca7a73d4b5c7e7a6c35415e2bfeb5533c5fc1d1b4aa80bc4cb641213ee29a3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   │   └── b10831a7a2cf4e96ff6b186396e9e393e5b02aa8c447e988cc6cca5172fc5c89
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── podfc7fbc35-bb79-4a33-80a0-371d438f221e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── 07703a4a76b926c8432c3a8ab50b69b8dfd2891733a09d830fc1a08f8a8e0a1c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── 3a7550ae2bd7784bc7f74fa0288d361e6d569595a0ba237bb63cdd5468073316
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── burstable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── pod420984c2d6d62f72216bba6857bc368b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── 5f734d0677fb4dd0f3e3dd3647be6ad19ec728fd3e28860c6023ea6efb7fc331
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── 93cd418eaddf86be58b200c109674a36cc04fee0eccfae4a7838a1b0e6a4f978
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── pod4ebb633e-f8ba-43ee-94c7-1cf8c9105555
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── 1bc40d00174d3ea84f4fce14d734a45115e72e4af394bd7d684d9691e7749995
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── podcd4bc68a-faf3-4c08-8d07-57d25a68ee1b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── 62ba8b7c6e1afc62d16b65e0d0ae9f82254260815025ecb6c863fa82c9ea5e8e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── c7aca0c0fdf230a6378e3325f03242ff561ec95e7f62b3b852f2877af0235792
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── podd4f2a7d434e44edd8e4a0960111bda9f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── 08d95544fcd3a5631c5a6a550d42bcddf8319cfb1fbe7f2482d969fc19356466
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── a7a39f33fddce54c64c4a6d0bf4b499fe3d6b3d7c7f5fc0d54445ade5cad24b1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── pode8486b59c2c8408b07026a560746b02c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── b9fb9af9f1c5991786c6457f5b33c90ee8e33a3d68605d409b7a2c30d5565699
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── f7f6773069032faa45ef3fc62fe337127fe40795ebc3758d03e149376d18d3da
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── pode86c3e73-a96e-4ae8-9ff6-fd401cf5c9aa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── 4ad31b5ea0ad5743eeb67628c3bf9275d2131f2132a4bbe7081c05f63c6604ea
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── 5f31deed41c58dbc0a0530b964926968d272e846cf9d91452c40797ace7fb90a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── podf27baf8c-6c71-4f3a-9445-0c63eb33d586
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── 1ae1d0d1fb0d44652c8ad8ef2d782628ec04a7b0e6e5718ea6788af178505ba2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── 5e898be28b1cb5ccb7f9f52eddee06c114d7d42b951b256da5544128093216be
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── machine.slice
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── machine-qemu&lt;span class="se">\\&lt;/span>x2d18&lt;span class="se">\\&lt;/span>x2dvm123.scope
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── emulator
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── vcpu0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── system.slice
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── user.slice
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;code>machine.slice&lt;/code> 是 libvirt 针对每个 qemu 进程生成的 cgroup管理空间. 我们意在将其纳入 k8s cgoup 统计范围内。&lt;/p>
&lt;/blockquote>
&lt;h3 id="container-level">Container level&lt;/h3>
&lt;p>上述 Node level 发生在 kubelet 的 SyncPod 函数执行过程中， 同样的， container 相关的 cgroup创建 也是在这之后。&lt;/p>
&lt;p>故事仍然要从pod 创建请求开始， 从 入口处的 kubelet &lt;code>syncLoop&lt;/code> -&amp;gt; &lt;code>syncLoopIteration&lt;/code> -&amp;gt; &lt;code>HandlePodAddtions&lt;/code> -&amp;gt; &lt;code>dispatchWork&lt;/code> -&amp;gt; &lt;code>UpdatePod&lt;/code> -&amp;gt; &lt;code>managePodLoop&lt;/code> -&amp;gt; &lt;code>SyncPod&lt;/code> -&amp;gt; &lt;code>kl.containerRuntime.SyncPod&lt;/code>&lt;/p>
&lt;p>进入 真正创建 container流程，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">SyncPod&lt;/span> &lt;span class="n">syncs&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">running&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">into&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">desired&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">executing&lt;/span> &lt;span class="n">following&lt;/span> &lt;span class="n">steps&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">1.&lt;/span> &lt;span class="n">Compute&lt;/span> &lt;span class="n">sandbox&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">changes&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">2.&lt;/span> &lt;span class="n">Kill&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">sandbox&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">necessary&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">3.&lt;/span> &lt;span class="n">Kill&lt;/span> &lt;span class="n">any&lt;/span> &lt;span class="n">containers&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">should&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">running&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">4.&lt;/span> &lt;span class="n">Create&lt;/span> &lt;span class="n">sandbox&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">necessary&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">5.&lt;/span> &lt;span class="n">Create&lt;/span> &lt;span class="n">ephemeral&lt;/span> &lt;span class="n">containers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">6.&lt;/span> &lt;span class="n">Create&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="n">containers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mf">7.&lt;/span> &lt;span class="n">Create&lt;/span> &lt;span class="n">normal&lt;/span> &lt;span class="n">containers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">TODO&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yuhua&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="err">创建&lt;/span>&lt;span class="n">container&lt;/span> &lt;span class="err">之处。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">kubeGenericRuntimeManager&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">SyncPod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pod&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podStatus&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">kubecontainer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PodStatus&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pullSecrets&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Secret&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">backOff&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flowcontrol&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Backoff&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="n">kubecontainer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PodSyncResult&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>containerRuntime.SyncPod 主要内容涉及到 如下几个步骤&lt;/p>
&lt;ul>
&lt;li>计算 sandbox 和 container 变化&lt;/li>
&lt;li>删除无用sandbox&lt;/li>
&lt;li>删除无用 容器&lt;/li>
&lt;li>创建沙箱&lt;/li>
&lt;li>创建 一次性容器&lt;/li>
&lt;li>创建 初始化容器&lt;/li>
&lt;li>创建 其他容器。&lt;/li>
&lt;/ul>
&lt;p>上述前4步都与 cgroup无关，这里最后的三个创建步骤 都使用了 一些公用逻辑。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Helper containing boilerplate common to starting all types of containers.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// typeName is a label used to describe this type of container in log messages,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// currently: &amp;#34;container&amp;#34;, &amp;#34;init container&amp;#34; or &amp;#34;ephemeral container&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">start := func(typeName string, container *v1.Container) error {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> startContainerResult := kubecontainer.NewSyncResult(kubecontainer.StartContainer, container.Name)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> result.AddSyncResult(startContainerResult)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">isInBackOff, msg, err := m.doBackOff(pod, container, podStatus, backOff)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if isInBackOff {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> startContainerResult.Fail(err, msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> klog.V(4).Infof(&amp;#34;Backing Off restarting %v %+v in pod %v&amp;#34;, typeName, container, format.Pod(pod))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return err
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">klog.V(4).Infof(&amp;#34;Creating %v %+v in pod %v&amp;#34;, typeName, container, format.Pod(pod))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// NOTE (aramase) podIPs are populated for single stack and dual stack clusters. Send only podIPs.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if msg, err := m.startContainer(podSandboxID, podSandboxConfig, container, pod, podStatus, pullSecrets, podIP, podIPs); err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> startContainerResult.Fail(err, msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // known errors that are logged in other places are logged at higher levels here to avoid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // repetitive log spam
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> switch {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> case err == images.ErrImagePullBackOff:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> klog.V(3).Infof(&amp;#34;%v start failed: %v: %s&amp;#34;, typeName, err, msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> default:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> utilruntime.HandleError(fmt.Errorf(&amp;#34;%v start failed: %v: %s&amp;#34;, typeName, err, msg))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return err
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里只需要关注 &lt;code>startContainer&lt;/code> 相关逻辑：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">startContainer&lt;/span> &lt;span class="n">starts&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="n">indicates&lt;/span> &lt;span class="n">why&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">It&lt;/span> &lt;span class="n">starts&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">through&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">following&lt;/span> &lt;span class="n">steps&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">pull&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">image&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">container&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">container&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">post&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="n">lifecycle&lt;/span> &lt;span class="n">hooks&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="n">applicable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">kubeGenericRuntimeManager&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">startContainer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">podSandboxID&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podSandboxConfig&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">runtimeapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PodSandboxConfig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Container&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podStatus&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">kubecontainer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PodStatus&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pullSecrets&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Secret&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podIP&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">podIPs&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里的 &lt;code>podSandboxConfig&lt;/code> 包含以下字段：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Linux&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">LinuxPodSandboxConfig&lt;/span> &lt;span class="s">`protobuf:&amp;#34;bytes,8,opt,name=linux,proto3&amp;#34; json:&amp;#34;linux,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// LinuxPodSandboxConfig holds platform-specific configurations for Linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// host platforms and Linux-based containers.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type LinuxPodSandboxConfig struct {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Parent cgroup of the PodSandbox.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // The cgroupfs style syntax will be used, but the container runtime can
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // convert it to systemd semantics if needed.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CgroupParent string `protobuf:&amp;#34;bytes,1,opt,name=cgroup_parent,json=cgroupParent,proto3&amp;#34; json:&amp;#34;cgroup_parent,omitempty&amp;#34;`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // LinuxSandboxSecurityContext holds sandbox security attributes.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SecurityContext *LinuxSandboxSecurityContext `protobuf:&amp;#34;bytes,2,opt,name=security_context,json=securityContext,proto3&amp;#34; json:&amp;#34;security_context,omitempty&amp;#34;`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Sysctls holds linux sysctls config for the sandbox.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sysctls map[string]string `protobuf:&amp;#34;bytes,3,rep,name=sysctls,proto3&amp;#34; json:&amp;#34;sysctls,omitempty&amp;#34; protobuf_key:&amp;#34;bytes,1,opt,name=key,proto3&amp;#34; protobuf_val:&amp;#34;bytes,2,opt,name=value,proto3&amp;#34;`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> XXX_NoUnkeyedLiteral struct{} `json:&amp;#34;-&amp;#34;`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> XXX_sizecache int32 `json:&amp;#34;-&amp;#34;`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里可以看到 CgroupParent 限制了 cgroup创建的 父路径。 至此 k8s 层的cgroup创建过程结束。&lt;/p>
&lt;p>创建结束后的 cgroup拓扑参考 Node章节结果。&lt;/p>
&lt;h2 id="其他相关特性">其他相关特性&lt;/h2>
&lt;h3 id="cpuset">CPUSet&lt;/h3>
&lt;p>当 VM 与 Pod 进行混合编排， 虚拟化语义中的 vcpu pin 可以使用 cgroup 的 cpu_set 作为 功能映射&lt;/p>
&lt;p>k8s 中 feature Gate &lt;code>CPUManager &lt;/code> 负责 管理 容器的 cpu set 设置 该功能 在 k8s 1.8 进入 alpha, 在 1.10 后 beta， 目前 （k8s 1.17） 仍然属于 beta 状态。&lt;/p>
&lt;h4 id="cpu-manager工作流">CPU Manager工作流&lt;/h4>
&lt;p>CPU Manager为满足条件的Container分配指定的CPUs时，会尽量按照CPU Topology来分配，也就是考虑CPU Affinity，按照如下的优先顺序进行CPUs选择：（Logic CPUs就是Hyperthreads）&lt;/p>
&lt;ol>
&lt;li>如果Container请求的Logic CPUs数量不小于单块CPU Socket中Logci CPUs数量，那么会优先把整块CPU Socket中的Logic CPUs分配给该Container。&lt;/li>
&lt;li>如果Container剩余请求的Logic CPUs数量不小于单块物理CPU Core提供的Logic CPUs数量，那么会优先把整块物理CPU Core上的Logic CPUs分配给该Container。&lt;/li>
&lt;li>Container剩余请求的Logic CPUs则从按照如下规则排好序的Logic CPUs列表中选择：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>number of CPUs available on the same socket&lt;/li>
&lt;li>number of CPUs available on the same core&lt;/li>
&lt;/ul>
&lt;h4 id="discovering-cpu-topology">Discovering CPU topology&lt;/h4>
&lt;p>CPU Manager能正常工作的前提，是发现Node上的CPU Topology，Discovery这部分工作是由cAdvisor完成的。&lt;/p>
&lt;p>在cAdvisor的MachineInfo中通过Topology会记录cpu和mem的Topology信息。其中Topology的每个Node对象就是对应一个CPU Socket。&lt;/p>
&lt;h4 id="创建容器">创建容器&lt;/h4>
&lt;p>对于满足前面提到的满足static policy的Container创建时，kubelet会为其按照约定的cpu affinity来为其挑选最优的CPU Set。Container的创建时CPU Manager工作流程大致如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Kuberuntime调用容器运行时去创建该Container。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kuberuntime将该Container交给CPU Manager处理。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CPU Manager为Container按照static policy逻辑进行处理。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CPU Manager从当前Shared Pool中挑选“最佳”Set拓扑结构的CPU，对于不满足Static Policy的Contianer，则返回Shared Pool中所有CPUS组成的Set。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CPU Manager将对该Container的CPUs分配情况记录到Checkpoint State中，并且从Shared Pool中删除刚分配的CPUs。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CPU Manager再从state中读取该Container的CPU分配信息，然后通过UpdateContainerResources cRI接口将其更新到Cpuset Cgroups中，包括对于非Static Policy Container。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kuberuntime调用容器运行时Start该容器。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>该过程入口处于 上一章节的 Container level 中的 &lt;code>startContainer&lt;/code> 函数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // TODO(yuhua): 设置 CPUset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> err = m.internalLifecycle.PreStartContainer(pod, container, containerID)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if err != nil {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s, _ := grpcstatus.FromError(err)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> m.recordContainerEvent(pod, container, containerID, v1.EventTypeWarning, events.FailedToStartContainer, &amp;#34;Internal PreStartContainer hook failed: %v&amp;#34;, s.Message())
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return s.Message(), ErrPreStartHook
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="写在最后">写在最后&lt;/h2>
&lt;p>libvirt 已经实现了完整的 cgroup 抽象， 但是缺少完整的 cgroup 管理流程，如果想要通过 cgroup将 vm 资源抽象 并与 Pod 的资源做统一管理， 我们在前端 （kubelet） 及 对应的 后端 （VRI） 设计完整的 cgroup 操作流程。&lt;/p>
&lt;h3 id="参考">参考:&lt;/h3>
&lt;ol>
&lt;li>&lt;a class="link" href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener"
> k8s &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cloud.tencent.com/developer/article/1402119" target="_blank" rel="noopener"
> cpu manager &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://libvirt.org/cgroups.html" target="_blank" rel="noopener"
> libvirt cgroups &lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Vertical Scaling of Pods | pod热缩放</title><link>http://blog.heyuhua.com/p/vertical-scaling-of-pods-pod%E7%83%AD%E7%BC%A9%E6%94%BE/</link><pubDate>Thu, 09 Jan 2020 11:30:34 +0800</pubDate><guid>http://blog.heyuhua.com/p/vertical-scaling-of-pods-pod%E7%83%AD%E7%BC%A9%E6%94%BE/</guid><description>&lt;p>这里缅怀 gonum社区的一位杰出贡献者. Sonia Keys.&lt;/p>
&lt;p>Sonia 是一位 业余天文学家，在03年被授予太平洋天文学杰出贡献奖。Golang 狂热爱好者， golang社区 数学及图形相关项目作者。&lt;/p>
&lt;hr>
&lt;p>OCI 协议中定义了 update api，但是上层的 k8s 编排层却一直缺少了相关的 container 热更新机制。在新产品的 技术调研中， kyle发现了上述功能提案，这里详细概括之。&lt;/p>
&lt;p>Vertical pod auto scaler， &lt;a class="link" href="https://cloud.google.com/kubernetes-engine/docs/concepts/verticalpodautoscaler?hl=zh-cn" target="_blank" rel="noopener"
>GKE 文档&lt;/a> 有详细的中文介绍， 社区一般将该功能简称为 VPA. 设计目的是为了能够调整 pod CPU / Memory 的request limit限制。&lt;/p>
&lt;p>这里我们希望在 VPA 实现中寻找一个方式能够有所帮助，或者能给予启发。&lt;/p>
&lt;p>摘抄自 GKE：&lt;/p>
&lt;blockquote>
&lt;h2 id="概览">概览&lt;/h2>
&lt;p>垂直 Pod 自动扩缩 (VPA) 使您不必考虑为容器的 CPU 请求和内存求指定具体的值。自动调节程序可以为 CPU 和内存请求和限制建议值，也可以自动更新值。&lt;/p>
&lt;p>垂直 Pod 自动扩缩提供以下好处：&lt;/p>
&lt;ul>
&lt;li>因为 Pod 完全用其所需，所以集群节点使用效率高。&lt;/li>
&lt;li>Pod 会被安排到具有适当可用资源的节点上。&lt;/li>
&lt;li>您不必运行耗时的基准测试任务来确定 CPU 和内存请求的正确值。&lt;/li>
&lt;li>自动调节程序可以随时调整 CPU 和内存请求，而无需您执行任何操作，所以维护时间更短。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>ok ，别人家的瓜只能吃到这里了。&lt;/p>
&lt;p>漫长的 G站扫街环节后。。。&lt;/p>
&lt;p>该功能的设计环节较为挫折，第一次参与人数较多的 讨论发生在 16年年初，隶属于 sig-node 小组，之后被重新分配到了 sig-autoscaling 小组下。 大概经过了 3年左右的开发周期。 将在近期（k8s 1.18 ）GA.&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/autoscaling/vertical-pod-autoscaler.md" title="设计实现方案"
target="_blank" rel="noopener"
>设计方案&lt;/a>详细描写了技术细节。这里会挑一些重点介绍。&lt;/p>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;h3 id="技术细节">技术细节&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/user-guide/compute-resources/" target="_blank" rel="noopener"
>资源计算&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/resource-qos.md" target="_blank" rel="noopener"
>资源Qos&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/admin/admission-controllers/" target="_blank" rel="noopener"
>准入控制&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/admin/extensible-admission-controllers/#external-admission-webhooks" target="_blank" rel="noopener"
>外部准入控制&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="目标">目标：&lt;/h3>
&lt;ol>
&lt;li>引入自动维护，减少维护成本。&lt;/li>
&lt;li>提高资源利用率，减少container OOM 发生的情况。&lt;/li>
&lt;/ol>
&lt;h3 id="相关功能">相关功能&lt;/h3>
&lt;h4 id="hpa-horizontal-pod-autoscaler">HPA( Horizontal Pod Autoscaler)&lt;/h4>
&lt;p>横向扩展， 通过监听 cpu 压力和其他用户指定的 metric 动态缩扩。一般情况下 用户将会对无状态负载制定 HPA 方案，对有状态服务设置 VPA.&lt;/p>
&lt;h4 id="ca-cluster-autoscaler">CA (Cluster Autoscaler)&lt;/h4>
&lt;p>自动进行集群大小的配置。 可以和 VPA, HPA 组成完整的自动化伸缩方案。&lt;/p>
&lt;h4 id="initial-resources">initial resources&lt;/h4>
&lt;p>概念性的功能，基于历史利用率指标， 可以在pod创建时给予resource建议。 VPA 会覆盖重写该功能。&lt;/p>
&lt;h4 id="resource-estimation">Resource estimation&lt;/h4>
&lt;p>资源预算, 旨在提高节点资源的利用率。通过临时回收容器当前未使用的资源。 可以对标虚拟化的 DMC.概念和实现。使用Node pod 短时间时序数据进行资源回收和释放。 该功能与 VPA 互补。 仍处于&lt;strong>设计阶段&lt;/strong>。&lt;/p>
&lt;h3 id="需求">需求&lt;/h3>
&lt;h4 id="功能特性">功能特性&lt;/h4>
&lt;ol>
&lt;li>VPA 可以修改 POD 的资源 request/limit&lt;/li>
&lt;li>VPA 可以对 CPU 高负载， 内存 OOM 的事件作出相应。&lt;/li>
&lt;li>重启 VPA 管理下的 pod 可以遵循破坏预算功能（disruption budget）&lt;/li>
&lt;li>VPA 可配置：用户可以制定 VPA 动态缩扩的上下限。&lt;/li>
&lt;li>VPA 支持 pod controller,至少支持 deployment.&lt;/li>
&lt;/ol>
&lt;p>&amp;hellip;..&lt;/p>
&lt;p>其他:&lt;/p>
&lt;pre>&lt;code>- 高可用的
- 在 in-place update 功能完成后可以自动支持。（我们关注的重点之一）
&lt;/code>&lt;/pre>
&lt;h3 id="设计">设计&lt;/h3>
&lt;ol>
&lt;li>添加了一个 新的 API Server资源&lt;code>vertialPodAutoscaler&lt;/code>, 包含了一个&lt;strong>label selector&lt;/strong>去筛选 pod，使用 &lt;strong>resources policy&lt;/strong>控制如何将pod 的配置更新， 并且给出推荐的 pod resource 配置。&lt;/li>
&lt;li>一个新的组件 &lt;strong>VPA Recommender&lt;/strong> ，从 &lt;code>metrics-server&lt;/code> 响应消费集群所有的 pod 资源负载信号， 和 OOM 信号.&lt;/li>
&lt;li>VPA Recommender &lt;strong>监听所有的 pods&lt;/strong>，持续计算针对这些pod 的推荐资源用量，并&lt;strong>存储在 VPA 对象中&lt;/strong>。&lt;/li>
&lt;li>VPA Recommender 还会额外的 暴露一个同步 API ，可以获取 POD 描述， 并且返回 推荐的 资源配置。&lt;/li>
&lt;li>所有的Pod 资源创建请求 会经由 VPA 的 &lt;strong>Admission Controller&lt;/strong>，如果pod 可以匹配到任何读经的 VPA 对象，该访问控制插件会将 pod 的 资源字段，如果 上面的 VPA recommender 不可访问， 则会降级到使用已经缓存的vpa资源。&lt;/li>
&lt;li>另一个独立组件 &lt;strong>VPA Updater&lt;/strong>，负责实施更新 pods，如果一个 pod 使用 “&lt;code>auto&lt;/code>”模式的 VPA 配置，则该组件可以自动决定更新其 resource 配置到推荐值。这里要求 pod资源需要隶属于其他上层抽象管理资源，如 &lt;code>replicaset&lt;/code>等,可以在 pod因为修改配置后被销毁后重新创建。 在之后的更新中， Updater 会引入 &lt;code>in-place-update&lt;/code> 模式, 可以绕过 上述管理资源，因其可以直接在pod不销毁的情况下进行资源修改。&lt;/li>
&lt;li>CPA 之 控制资源的 下限，即 resource 的 request，但会将其limit设置为 infinity. 其 request 的数值根据 当前和之前运行时的 监控数据计算得出。&lt;/li>
&lt;li>新组件：&lt;strong>History Storage&lt;/strong>，同样的， 会消费来自 API Server 的资源利用率和OOM 事件（与 Recommender 组件相同），并且将其持久化存储。 该组件被 Recommender 用作在 启动时初始化。 可以由任意数据库支持。 MVP版本使用 Prometheus, 至少对于 资源使用率的部分是这样的。&lt;/li>
&lt;/ol>
&lt;h4 id="架构图">架构图&lt;/h4>
&lt;p>&lt;img src="http://qiniu.heyuhua.com/blog/post/vpa-architecture.png"
loading="lazy"
alt="vpa-architecture"
>&lt;/p>
&lt;h4 id="api">API&lt;/h4>
&lt;p>上面的 API 对象 &lt;code>verticalPodAutoscaler&lt;/code> 的一些详细信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// VerticalPodAutoscalerSpec is the specification of the behavior of the autoscaler.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type VerticalPodAutoscalerSpec {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // A label query that determines the set of pods controlled by the Autoscaler.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Selector *metav1.LabelSelector
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Describes the rules on how changes are applied to the pods.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // +optional
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UpdatePolicy PodUpdatePolicy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Controls how the autoscaler computes recommended resources.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // +optional
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ResourcePolicy PodResourcePolicy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// VerticalPodAutoscalerStatus describes the runtime state of the autoscaler.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type VerticalPodAutoscalerStatus {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // The time when the status was last refreshed.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LastUpdateTime metav1.Time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // The most recently computed amount of resources recommended by the
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // autoscaler for the controlled pods.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // +optional
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Recommendation RecommendedPodResources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // A free-form human readable message describing the status of the autoscaler.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> StatusMessage string
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="selector">Selector&lt;/h5>
&lt;p>指明了 哪些pod会被 VPA 控制。 也就是说 用户需要在编辑 pod时确保 label中包含了 VPA的信息。&lt;/p>
&lt;h5 id="update-policy">Update Policy&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;updatePolicy&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>模式指定。 VPA 包含三种resource 自动伸缩策略。&lt;/p>
&lt;ol>
&lt;li>&amp;ldquo;&lt;code>Initial&lt;/code>&amp;rdquo;: VPA 只在 创建 pod时指定资源，在之后的pod生命周期中都不做修改。&lt;/li>
&lt;li>&amp;ldquo;&lt;code>Auto&lt;/code>&amp;quot;(defualt): 可以在 Pod 创建和运行时更新，包括驱逐， 重新规划（reschedule).&lt;/li>
&lt;li>&amp;ldquo;off&amp;rdquo;：没什么卵用的开发用功能。不作为，但是会记录运行时metric.&lt;/li>
&lt;/ol>
&lt;h5 id="resource-policy">Resource Policy&lt;/h5>
&lt;p>资源上下限。自动伸缩波动范围 threshold.&lt;/p>
&lt;p>写到这里应该是差不多了。 后面的实现细节并不设计 resource in-place update 相关内容。&lt;/p></description></item><item><title>python重修之旅（五）</title><link>http://blog.heyuhua.com/p/python%E9%87%8D%E4%BF%AE%E4%B9%8B%E6%97%85%E4%BA%94/</link><pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate><guid>http://blog.heyuhua.com/p/python%E9%87%8D%E4%BF%AE%E4%B9%8B%E6%97%85%E4%BA%94/</guid><description>&lt;blockquote>
&lt;p>In code we trust. &amp;ndash;BitCoin&lt;/p>
&lt;/blockquote>
&lt;h2 id="numpyrollaxis-的另类理解方式">numpy.rollaxis 的另类理解方式&lt;/h2>
&lt;h3 id="rollaxis-实例">rollaxis 实例&lt;/h3>
&lt;p>in[1]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">%&lt;/span>&lt;span class="n">matplotlib&lt;/span> &lt;span class="n">inline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">scipy.misc&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[2]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scipy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">misc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;magic.png&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[3]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dtype&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>out[3]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dtype(&amp;#39;uint8&amp;#39;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[4]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">toimage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>out[4]:&lt;/p>
&lt;p>&lt;img src="http://qiniu.heyuhua.com/output_5_0.png"
loading="lazy"
alt="png"
>&lt;/p>
&lt;p>in[5]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>out[5]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(810, 572, 4)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[6]: 该操作与 &lt;code>c = np.swapaxes(b, 0, 1)&lt;/code> 等效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rollasix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[7]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>out[7]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(572, 810, 4)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>in[8]:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">toimage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>out[9]:&lt;/p>
&lt;p>&lt;img src="http://qiniu.heyuhua.com/output_7_0.png"
loading="lazy"
alt="png"
>&lt;/p>
&lt;h2 id="python常用设计模式">python常用设计模式&lt;/h2>
&lt;p>行文结构参照以下项目。
项目地址： &lt;a class="link" href="https://github.com/faif/python-patterns" target="_blank" rel="noopener"
>https://github.com/faif/python-patterns&lt;/a>&lt;/p>
&lt;p>《松本行弘的程序世界》对三人组的《设计模式》称赞有加：&lt;/p>
&lt;blockquote>
&lt;p>把普通人难以学习和吸收的内隐知识变成形式只是的功绩是无与伦比的。&lt;/p>
&lt;/blockquote>
&lt;p>在设计模式原书中一共提到23种常用的设计模式，分为三大类：生成模式（creational），
构造模式（structural）， 行为模式（behavioral）。该项目同样按照这三大类进行了分类整理，
同时还补充了一些python常用的其他场景的特用模式。
在整理这片文章的过程中，我忽略了一些无聊的模式，并引用或者另写了一些更好的代码用例。&lt;/p>
&lt;p>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;生成模式&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p>
&lt;h3 id="abstract_factory--抽象工厂">abstract_factory / 抽象工厂&lt;/h3>
&lt;p>最直白的就是“鸡鸭鹅狗猫都是动物”：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">abc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ABCMeta&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">abstractmethod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># Pet类是一个典型的抽象类, 包含了抽象方法 `speak`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 其类方法from_name 充当了 工厂“销售“ 的角色，对于所有的Pet子类，客户想要什么就可以得到什么。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Pet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metaclass&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">ABCMeta&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">classmethod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">def&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">from_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cls&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sub_cls&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">__subclasses__&lt;/span>&lt;span class="p">():&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sub_cls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">__name__&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">lower&lt;/span>&lt;span class="p">():&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">sub_cls&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">abstractmethod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">def&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">speak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Kitty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Pet&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">def&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">speak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Miao&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Duck&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Pet&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">def&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">speak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">):&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Quak&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;kitty&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;duck&amp;#39;&lt;/span>&lt;span class="p">]:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pet&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">from_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;{}: {}&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">speak&lt;/span>&lt;span class="p">()))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># kitty: Miao
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># duck: Quak
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="borg--集体主义模式">borg / 集体主义模式&lt;/h3>
&lt;p>emmm&amp;hellip; &lt;a class="link" href="https://blog.youxu.info/2010/04/29/borg/" target="_blank" rel="noopener"
>https://blog.youxu.info/2010/04/29/borg/&lt;/a> 介绍了borg的出处。
borg就是python的singleton，但是与singleton不同的是，borg模式为多个对象共享单一状态，
而不是单一对象多个引用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">class Borg(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> __shared_state = {}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.__dict__ = self.__shared_state
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.state = &amp;#39;Init&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __str__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return self.state
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ipython excemple
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [2]: a = Borg()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [3]: b = Borg()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [4]: a.state
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Out[4]: &amp;#39;Init&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [5]: b.state
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Out[5]: &amp;#39;Init&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [6]: a.state=&amp;#39;123&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [7]: b.state
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Out[7]: &amp;#39;123&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [8]: id(a)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Out[8]: 4340743360
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># In [9]: id(b)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Out[9]: 4340673448
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="builder--建造者模式">builder / 建造者模式&lt;/h3>
&lt;p>适用于构造复杂对象, 将构造过程拆分为独立模块&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># copy from《Mastering Python Design Patterns》&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">Computer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">serial_number&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">serial&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">serial_number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__str__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;memory: {0} GB, cpu: {1}, disk: {2} GB&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disk&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">ComputerBuilder&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Computer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SN-12345555&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">configure_memory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">memory&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">memory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">configure_cpu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cpu&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cpu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">configure_disk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">disk&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">disk&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">HardwareEngineer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">construct_computer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">memory&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cpu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">disk&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ComputerBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configure_memory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">memory&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configure_cpu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cpu&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configure_disk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">disk&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">property&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">computer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">engineer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">HardwareEngineer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">engineer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">construct_computer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">computer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">engineer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">computer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">computer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># memory: 16 GB, cpu: 8, disk: 500 GB&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="factory--工厂模式">factory / 工厂模式&lt;/h3>
&lt;p>抽象工厂和工厂模式在python实现中的区别大概只是有没有继承关系了。。。
同样的，工厂方法也是用来实现通用接口。比如说下面这种多国语言翻译的例子。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">class GreekGetter(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;A simple localizer a la gettext&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.trans = dict(dog=&amp;#34;σκύλος&amp;#34;, cat=&amp;#34;γάτα&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def get(self, msgid):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;We&amp;#39;ll punt if we don&amp;#39;t have a translation&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return self.trans.get(msgid, str(msgid))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class EnglishGetter(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;Simply echoes the msg ids&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def get(self, msgid):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return str(msgid)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def get_localizer(language=&amp;#34;English&amp;#34;):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;The factory method&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> languages = dict(English=EnglishGetter, Greek=GreekGetter)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return languages[language]()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # Create our localizers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> e, g = get_localizer(language=&amp;#34;English&amp;#34;), get_localizer(language=&amp;#34;Greek&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # Localize some text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for msgid in &amp;#34;dog parrot cat bear&amp;#34;.split():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(e.get(msgid), g.get(msgid))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### OUTPUT ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># dog σκύλος
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># parrot parrot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># cat γάτα
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># bear bear
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="lazy_evaluation-惰性求值">lazy_evaluation / 惰性求值&lt;/h3>
&lt;p>Delays the eval of an expr until its value is needed and avoids repeated evals.&lt;/p>
&lt;p>表达式计算延迟到调用时，同时避免重复计算&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">functools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">cached_property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">function&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">functools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_wrapper&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">function&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__get__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type_&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">__dict__&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">function&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">__name__&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">val&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The cached_property(a.k.a lazy_property) is a decorator which convert a func
into a lazy evaluation property. The first time property accessed, the func
is called to get result and then the value is used the next time you access
the property.&lt;/p>
&lt;p>eg:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">LogHandler&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file_path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">cached_property&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">load_log_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">with&lt;/span> &lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">file_path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># the file is to big that I have to cost 2s to read all file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">log_handler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LogHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./sys.log&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># only the first time call will cost 2s.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_handler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_log_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># return value is cached to the log_handler obj.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_handler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_log_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pool-池模式">pool /池模式&lt;/h3>
&lt;p>预初始化一批对象并保持可用状态。
pool模式常用来提供各种服务连接，比如各大数据库提供的ConnectionPool, python内建的
threadingPools。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import queue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ObjPool:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, queue, auto_get=False):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._queue = queue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.item = self._queue.get() if auto_get else None
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __enter__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if self.item is None:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.item = self._queue.get()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return self.item
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __exit__(self, exc_type, exc_val, exc_tb):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if self.item is not None:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._queue.put(self.item)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self. item = None
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __del__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if self.item is not None:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._queue.put(self.item)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self. item = None
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my_queue = queue.Queue(maxsize=20)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my_queue.put(&amp;#39;huahua&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my_queue.put(&amp;#39;dandan&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def do_sth_in_queue(myqueue):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with ObjPool(myqueue) as obj:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;inside {obj}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> out_item = myqueue.get()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;outside {out_item}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> myqueue.put(out_item)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with ObjPool(myqueue) as obj:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;inside {obj}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">do_sth_in_queue(my_queue)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside huahua
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside dandan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside huahua
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside dandan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside huahua
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># inside dandan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="protopype--原型">protopype / 原型&lt;/h3>
&lt;p>通过clone原型来创建新的实例。似乎并没有人用过。。。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">class Prototype(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> value = &amp;#39;default&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def clone(self, **attrs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;Clone a prototype and update inner attributes dictionary&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # Python in Practice, Mark Summerfield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> obj = self.__class__()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> obj.__dict__.update(attrs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return obj
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;生成模式&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p>
&lt;h3 id="adapter--适配器">adapter / 适配器&lt;/h3>
&lt;p>我想起了10年前家里用的万能充：万能充总是能通过改变自己的接口形状来适应不同的手机电池。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">class Dog(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.name = &amp;#34;Dog&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def bark(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;woof!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Cat(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.name = &amp;#34;Cat&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def meow(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;meow!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Human(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.name = &amp;#34;Human&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def speak(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;&amp;#39;hello&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Car(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.name = &amp;#34;Car&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def make_noise(self, octane_level):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;vroom{0}&amp;#34;.format(&amp;#34;!&amp;#34; * octane_level)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Adapter(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Adapts an object by replacing methods.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dog = Dog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dog = Adapter(dog, dict(make_noise=dog.bark))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; objects = []
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; dog = Dog()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; print(dog.__dict__)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {&amp;#39;name&amp;#39;: &amp;#39;Dog&amp;#39;}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; objects.append(Adapter(dog, make_noise=dog.bark))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; print(objects[0].original_dict())
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {&amp;#39;name&amp;#39;: &amp;#39;Dog&amp;#39;}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; cat = Cat()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; objects.append(Adapter(cat, make_noise=cat.meow))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; human = Human()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; objects.append(Adapter(human, make_noise=human.speak))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; car = Car()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; car_noise = lambda: car.make_noise(3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; objects.append(Adapter(car, make_noise=car_noise))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt;&amp;gt;&amp;gt; for obj in objects:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... print(&amp;#39;A {} goes {}&amp;#39;.format(obj.name, obj.make_noise()))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A Dog goes woof!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A Cat goes meow!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A Human goes &amp;#39;hello&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> A Car goes vroom!!!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, obj, **adapted_methods):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;We set the adapted methods in the object&amp;#39;s dict&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.obj = obj
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.__dict__.update(adapted_methods)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __getattr__(self, attr):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;All non-adapted calls are passed to the object&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return getattr(self.obj, attr)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def original_dict(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;Print original object dict&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return self.obj.__dict__
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="bridge--桥接模式">bridge / 桥接模式&lt;/h3>
&lt;p>桥接的使用集中在频繁更换实现方法时。用于把容易拆分的实现抽象成接口。然后挑选使用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># ConcreteImplementor 1/2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class DrawingAPI1(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def draw_circle(self, x, y, radius):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;API1.circle at {}:{} radius {}&amp;#39;.format(x, y, radius))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ConcreteImplementor 2/2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class DrawingAPI2(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def draw_circle(self, x, y, radius):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;API2.circle at {}:{} radius {}&amp;#39;.format(x, y, radius))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Refined Abstraction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class CircleShape(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, x, y, radius, drawing_api):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._x = x
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._y = y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._radius = radius
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._drawing_api = drawing_api
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # low-level i.e. Implementation specific
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def draw(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._drawing_api.draw_circle(self._x, self._y, self._radius)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # high-level i.e. Abstraction specific
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def scale(self, pct):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._radius *= pct
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def main():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> shapes = (
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CircleShape(1, 2, 3, DrawingAPI1()),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CircleShape(5, 7, 11, DrawingAPI2())
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for shape in shapes:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> shape.scale(2.5)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> shape.draw()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### OUTPUT ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># API1.circle at 1:2 radius 7.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># API2.circle at 5:7 radius 27.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="composite--组合模式">composite / 组合模式&lt;/h3>
&lt;p>一种表达树形结构的方法,恕在下才疏学浅，还没有注意到生产代码中的类似用例。
贴一段 soucemaking上的用例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import abc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Component(metaclass=abc.ABCMeta):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Declare the interface for objects in the composition.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Implement default behavior for the interface common to all classes,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> as appropriate.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Declare an interface for accessing and managing its child
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> components.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define an interface for accessing a component&amp;#39;s parent in the
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> recursive structure, and implement it if that&amp;#39;s appropriate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (optional).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @abc.abstractmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def operation(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Composite(Component):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define behavior for components having children.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Store child components.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Implement child-related operations in the Component interface.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._children = set()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def operation(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for child in self._children:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> child.operation()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def add(self, component):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._children.add(component)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def remove(self, component):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._children.discard(component)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Leaf(Component):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Represent leaf objects in the composition. A leaf has no children.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define behavior for primitive objects in the composition.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def operation(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def main():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> leaf = Leaf()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> composite = Composite()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> composite.add(leaf)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> composite.operation()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="faced--门面">faced / 门面&lt;/h3>
&lt;p>可以叫它总闸模式： 一个独立的模块单独负责所有子对象的运行。
举个极其抽象的例子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">def runner():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> a = lambda: &amp;#34;task a&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> b = lambda: &amp;#34;task b&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c = lambda: &amp;#34;task c&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tasks = [a, b, c]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> task_ret = [task() for task in tasks]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(task_ret)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="flyweight--享元">flyweight / 享元&lt;/h3>
&lt;p>通过与其他相似的对象共享数据来达到节省内存的目的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- coding: utf-8 -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*References:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">http://codesnipers.com/?q=python-flyweights
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">http://yloiseau.net/articles/DesignPatterns/flyweight/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*TL;DR80
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Minimizes memory usage by sharing data with other similar objects.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import weakref
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class FlyweightMeta(type):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __new__(mcs, name, parents, dct):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Set up object pool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> :param name: class name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> :param parents: class parents
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> :param dct: dict: includes class attributes, class methods,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> static methods, etc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> :return: new class
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dct[&amp;#39;pool&amp;#39;] = weakref.WeakValueDictionary()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 调用 type 的 new 方法。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return super(FlyweightMeta, mcs).__new__(mcs, name, parents, dct)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @staticmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def _serialize_params(cls, *args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Serialize input parameters to a key.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Simple implementation is just to serialize it as a string
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> args_list = list(map(str, args))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> args_list.extend([str(kwargs), cls.__name__])
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> key = &amp;#39;&amp;#39;.join(args_list)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __call__(cls, *args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> key = FlyweightMeta._serialize_params(cls, *args, **kwargs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pool = getattr(cls, &amp;#39;pool&amp;#39;, {})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> instance = pool.get(key)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if instance is None:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> instance = super(FlyweightMeta, cls).__call__(*args, **kwargs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pool[key] = instance
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return instance
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def with_metaclass(meta, *bases):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34; Provide python cross-version metaclass compatibility. &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return meta(&amp;#34;NewBase&amp;#34;, bases, {})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Card2(with_metaclass(FlyweightMeta)):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, *args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # comment __new__ and uncomment __init__ to see the difference
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # Tests with metaclass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> instances_pool = getattr(Card2, &amp;#39;pool&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cm1 = Card2(&amp;#39;10&amp;#39;, &amp;#39;h&amp;#39;, a=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cm2 = Card2(&amp;#39;10&amp;#39;, &amp;#39;h&amp;#39;, a=1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cm3 = Card2(&amp;#39;10&amp;#39;, &amp;#39;h&amp;#39;, a=2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;id:{id(cm1)}, {cm1}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;id:{id(cm2)}, {cm2}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;id:{id(cm3)}, {cm3}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert (cm1 == cm2) != cm3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert (cm1 is cm2) is not cm3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert len(instances_pool) == 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> del cm1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert len(instances_pool) == 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> del cm2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert len(instances_pool) == 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> del cm3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assert len(instances_pool) == 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="front-controtllor--前端控制器">front controtllor / 前端控制器&lt;/h3>
&lt;p>front controtollr 提供了一个中控平台控制和管理请求。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 点击右上角查看示例
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mvcn-tier--分层">mvc&amp;amp;n-tier / 分层&lt;/h3>
&lt;p>mvc 和 n-tier 的差别就是， n-tier 模式中各模块为线性关系，而 mvc结构中，view 向controllor
发送更新信息，controllor更新model，然后view层获取model层的更新。&lt;/p>
&lt;p>在应用中，我们通常用mvc，mvvc等来形容app的代码层级结构，而在基础设施搭建中，我们通常用n-tier来
描述该协议/模式的运行模式。比如网络的7层/3层结构。&lt;/p>
&lt;p>&lt;strong>mvc&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 点击右上角查看示例
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>3-tier&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 点击右上角查看示例
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="proxy--代理">proxy / 代理&lt;/h3>
&lt;p>代理的核心思想是控制对一个对象的访问过程，比如网络代理，控制了网络访问的过程。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 点击右上角查看源网址
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Provide a surrogate or placeholder for another object to control access
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">to it or add other responsibilities.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import abc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Subject(metaclass=abc.ABCMeta):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define the common interface for RealSubject and Proxy so that a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Proxy can be used anywhere a RealSubject is expected.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @abc.abstractmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def request(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Proxy(Subject):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Maintain a reference that lets the proxy access the real subject.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Provide an interface identical to Subject&amp;#39;s.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, real_subject):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._real_subject = real_subject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def request(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._real_subject.request()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class RealSubject(Subject):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define the real object that the proxy represents.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def request(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def main():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> real_subject = RealSubject()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy = Proxy(real_subject)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy.request()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;行为模式&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p>
&lt;h3 id="chain--责任链">chain / 责任链&lt;/h3>
&lt;p>责任链将多个对象连成一条链，并且沿着这条链传递请求，直到有对象处理为止。 该模式解耦了请求和处理者
，客户端只要发送请求到责任链，无需关心请求的处理细节。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;span class="lnt">96
&lt;/span>&lt;span class="lnt">97
&lt;/span>&lt;span class="lnt">98
&lt;/span>&lt;span class="lnt">99
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- coding: utf-8 -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">http://www.dabeaz.com/coroutines/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from contextlib import contextmanager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import os
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import sys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import abc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def coroutine(func):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def start(*args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cr = func(*args, **kwargs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> next(cr)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return cr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@coroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def coroutine1(target):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> request = yield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if 0 &amp;lt; request &amp;lt;= 10:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;request {} handled in coroutine 1&amp;#39;.format(request))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> target.send(request)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@coroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def coroutine2(target):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> request = yield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if 10 &amp;lt; request &amp;lt;= 20:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;request {} handled in coroutine 2&amp;#39;.format(request))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> target.send(request)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@coroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def coroutine3(target):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> request = yield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if 20 &amp;lt; request &amp;lt;= 30:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;request {} handled in coroutine 3&amp;#39;.format(request))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> target.send(request)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@coroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def default_coroutine():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> request = yield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;end of chain, no coroutine for {}&amp;#39;.format(request))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ClientCoroutine:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # chain
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.target = coroutine1(coroutine3(coroutine2(default_coroutine())))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def delegate(self, requests):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for request in requests:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.target.send(request)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def timeit(func):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def count(*args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> start = time.time()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> res = func(*args, **kwargs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count._time = time.time() - start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return res
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return count
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@contextmanager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def suppress_stdout():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> stdout, sys.stdout = sys.stdout, open(os.devnull, &amp;#39;w&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> yield
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> finally:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sys.stdout = stdout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client = ClientCoroutine()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> requests = [2, 5, 14, 22, 18, 3, 35, 27, 20]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;-&amp;#39; * 30)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client.delegate(requests)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> requests *= 10000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client_delegate = timeit(client.delegate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with suppress_stdout():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client_delegate(requests)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="command--命令模式">command / 命令模式&lt;/h3>
&lt;p>一种数据驱动的设计模式。请求以命令的形式包裹在对象中，并传给调用对象。调用对象寻找可以
处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- coding: utf8 -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import abc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from sys import stdout as console
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Handling &amp;#39;exit&amp;#39; command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class SessionClosed(Exception):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, value):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.value = value
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Interface
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Command(metaclass=abc.ABCMeta):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise NotImplementedError()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def cancel(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise NotImplementedError()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @abc.abstractmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># rm command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class RmCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;You are executed \&amp;#34;rm\&amp;#34; command\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def cancel(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;You are canceled \&amp;#34;rm\&amp;#34; command\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;rm&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># uptime command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class UptimeCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;You are executed \&amp;#34;uptime\&amp;#34; command\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def cancel(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;You are canceled \&amp;#34;uptime\&amp;#34; command\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;uptime&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># undo command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class UndoCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cmd = HISTORY.pop()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TRASH.append(cmd)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;Undo command \&amp;#34;{0}\&amp;#34;\n&amp;#34;.format(cmd.name()))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cmd.cancel()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> except IndexError:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;ERROR: HISTORY is empty\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;undo&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># redo command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class RedoCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cmd = TRASH.pop()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HISTORY.append(cmd)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;Redo command \&amp;#34;{0}\&amp;#34;\n&amp;#34;.format(cmd.name()))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cmd.execute()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> except IndexError:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;ERROR: TRASH is empty\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;redo&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># history command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class HistoryCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> i = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for cmd in HISTORY:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;{0}: {1}\n&amp;#34;.format(i, cmd.name()))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> i = i + 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#34;history&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># exit command
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ExitCommand(Command):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def execute(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise SessionClosed(&amp;#34;Good day!&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def name(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;exit&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># available commands
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COMMANDS = {&amp;#39;rm&amp;#39;: RmCommand(), &amp;#39;uptime&amp;#39;: UptimeCommand(), &amp;#39;undo&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UndoCommand(), &amp;#39;redo&amp;#39;: RedoCommand(), &amp;#39;history&amp;#39;: HistoryCommand(),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;exit&amp;#39;: ExitCommand()}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HISTORY = list()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">TRASH = list()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Shell
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def main():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while True:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.flush()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;pysh &amp;gt;&amp;gt; &amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cmd = input()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> command = COMMANDS[cmd]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> command.execute()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (not isinstance(command, UndoCommand) and not
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> isinstance(command, RedoCommand) and not
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> isinstance(command, HistoryCommand)):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> global TRASH
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TRASH = list()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HISTORY.append(command)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> except KeyError:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(&amp;#34;ERROR: Command \&amp;#34;%s\&amp;#34; not found\n&amp;#34; % cmd)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> except SessionClosed as e:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.write(e.value)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="iterator--迭代器">iterator / 迭代器&lt;/h3>
&lt;p>emmm&amp;hellip; class里的 magic methods &lt;code>__next__&lt;/code>, &lt;code>__iter__&lt;/code>, 函数中的&lt;code>yield&lt;/code>, 都可以用来
生成iterator。
一个简单的迭代器。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">aiter&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">yield&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mediator--中介">mediator / 中介&lt;/h3>
&lt;p>用来降低多个对象和类之间的通信复杂性。这种模式提供了一个中介类，该类通常处理不同类之间的通信，
并支持松耦合，使代码易于维护。 &amp;ndash;&amp;gt; 想聊天的人多了，才出现了qq群。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Python Design Patterns: Mediator
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Author: Jakub Vojvoda [github.com/JakubVojvoda]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 2016
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Source code is licensed under MIT License
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># (for more details see LICENSE)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import sys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Colleague classes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># each colleague communicates with its mediator whenever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># it would have otherwise communicated with another colleague
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Colleague:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, mediator, identity):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._mediator = mediator
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._id = identity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def getID(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return self._id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def send(self, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def receive(self, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ConcreteColleague(Colleague):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, mediator, identity):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> super().__init__(mediator, identity)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def send(self, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#34;Message &amp;#39;&amp;#34; + message + &amp;#34;&amp;#39; sent by Colleague &amp;#34; + str(self._id))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._mediator.distribute(self, message)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def receive(self, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#34;Message &amp;#39;&amp;#34; + message + &amp;#34;&amp;#39; received by Colleague &amp;#34; + str(self._id))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Mediator
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># defines an interface for communicating with Colleague objects
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Mediator:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def add(self, colleague):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def distribute(self, sender, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Concrete Mediator
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># implements cooperative behavior by coordinating Colleague objects
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># and knows its colleagues
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ConcreteMediator(Mediator):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Mediator.__init__(self)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._colleagues = []
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def add(self, colleague):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._colleagues.append(colleague)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def distribute(self, sender, message):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for colleague in self._colleagues:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if colleague.getID() != sender.getID():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> colleague.receive(message)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 群。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mediator = ConcreteMediator()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 三个臭味相投的路人。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c1 = ConcreteColleague(mediator, 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c2 = ConcreteColleague(mediator, 2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c3 = ConcreteColleague(mediator, 3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 三个人进群了。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mediator.add(c1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mediator.add(c2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mediator.add(c3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 路人们在群里聊天。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c1.send(&amp;#34;Hi!&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c3.send(&amp;#34;Hello!&amp;#34;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="memento--备忘录">memento / 备忘录&lt;/h3>
&lt;p>如果有了后悔药你写的代码该多放浪形骸？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">右上角。点点点。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="observer--观察者">observer / 观察者&lt;/h3>
&lt;p>常用的状态机订阅模式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">右上角。点点点。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pub_sub--发布---订阅">pub_sub / 发布 - 订阅&lt;/h3>
&lt;p>去年毕业的时候面试过一次今日头条, 当时就问了设计模式的发布 订阅模型。。可惜可惜除了那道题别的我连听都没听说过啊。。。。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pattern publish subscribe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Provider:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.msg_queue = []
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.subscribers = {}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def notify(self, msg):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.msg_queue.append(msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def subscribe(self, msg, subscriber):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 订阅相关频道。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.subscribers.setdefault(msg, []).append(subscriber)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def unsubscribe(self, msg, subscriber):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 取消订阅
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.subscribers[msg].remove(subscriber)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def update(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for msg in self.msg_queue:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 从消息列表中获取消息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for sub in self.subscribers.get(msg, []):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 从订阅者中找到相关方
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 推送
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sub.run(msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 清空队列
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.msg_queue.clear()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Publisher:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, msg_center):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.provider = msg_center
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def publish(self, msg):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 发布者负责发布消息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.provider.notify(msg)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Subscriber:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 订阅者接受不了消息，处理消息。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, name, msg_center):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.name = name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.provider = msg_center
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def subscribe(self, msg):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.provider.subscribe(msg, self)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def unsubscribe(self, msg):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.provider.unsubscribe(msg, self)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def run(self, msg):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(f&amp;#39;{self.name} got {msg}&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> provider = Provider()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cctv = Publisher(provider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xiaoming = Subscriber(&amp;#39;xiaoming&amp;#39;, provider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> huahua = Subscriber(&amp;#39;huahua&amp;#39;, provider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dandan = Subscriber(&amp;#39;dandan&amp;#39;, provider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> huahua.subscribe(&amp;#39;chiji&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dandan.subscribe(&amp;#39;csgo&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xiaoming.subscribe(&amp;#39;python&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cctv.publish(&amp;#39;csgo&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> provider.update()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="registry--出生登记">registry / 出生登记&lt;/h3>
&lt;p>网传这种模式适合与singleton混用，如果登记处有这个人就复用，没有则生成一个单例。
在实际项目中，我个人更倾向于用来整理同类资源做反向查找。
这种模式上的整合可能要比 python 的 &lt;code>cls.__subclasses__()&lt;/code>更通俗一点&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class RegistryHolder(type):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> REGISTRY = {}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __new__(mcs, name, bases, attrs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new_cls = type.__new__(mcs, name, bases, attrs)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mcs.REGISTRY[new_cls.__name__] = new_cls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return new_cls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # def __init__(cls, *args, **kwargs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @classmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def get_registry(mcs):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return dict(mcs.REGISTRY)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ClassRegistree(metaclass=RegistryHolder):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class ClassregisA(ClassRegistree):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#34;Before subclassing: &amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for k in RegistryHolder.get_registry():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(k)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> class classregisB(ClassRegistree):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#34;After subclassing&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for k in RegistryHolder.get_registry():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(k)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="specification-规格">specification /规格&lt;/h3>
&lt;p>或者说是描述规则的模式。 常见的规则包括 and, or, is, not, specification 也需要实现这四个接口。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;span class="lnt">96
&lt;/span>&lt;span class="lnt">97
&lt;/span>&lt;span class="lnt">98
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- coding: utf-8 -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from abc import abstractmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class Specification(object):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def and_specification(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise NotImplementedError()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def or_specification(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise NotImplementedError()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def not_specification(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise NotImplementedError()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class CompositeSpecification(Specification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @abstractmethod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def and_specification(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AndSpecification(self, candidate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def or_specification(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return OrSpecification(self, candidate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def not_specification(self):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return NotSpecification(self)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class AndSpecification(CompositeSpecification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _one = Specification()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _other = Specification()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, one, other):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._one = one
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._other = other
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return bool(self._one.is_satisfied_by(candidate) and
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._other.is_satisfied_by(candidate))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class OrSpecification(CompositeSpecification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _one = Specification()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _other = Specification()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, one, other):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._one = one
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._other = other
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return bool(self._one.is_satisfied_by(candidate) or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._other.is_satisfied_by(candidate))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class NotSpecification(CompositeSpecification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _wrapped = Specification()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, wrapped):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self._wrapped = wrapped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return bool(not self._wrapped.is_satisfied_by(candidate))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class User:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def __init__(self, archive=True):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> self.archive = archive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class UserSpecification(CompositeSpecification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return isinstance(candidate, User)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class UserArciveSpecification(CompositeSpecification):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def is_satisfied_by(self, candidate):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return getattr(candidate, &amp;#39;archive&amp;#39;, True)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if __name__ == &amp;#39;__main__&amp;#39;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(&amp;#39;specification&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> niko = User(archive=True)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> olomeister = User(archive=False)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> the_specification = UserSpecification().\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> and_specification(UserArciveSpecification())
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(the_specification.is_satisfied_by(niko))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> print(the_specification.is_satisfied_by(olomeister))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### state / 状态机
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">适用于 状态较少的对象。利用状态来控制对象的表现形式。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>点击右上角查看代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### strategy / 策略
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">用于拆分策略，方便算法的替换
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">对于python的类对象，可以使用 `types.MethodType`方法将方法动态注册到实例。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="---coding-utf-8---">-&lt;em>- coding: utf-8 -&lt;/em>-&lt;/h1>
&lt;p>import types&lt;/p>
&lt;p>class StrategyExample:&lt;/p>
&lt;pre>&lt;code>def __init__(self, func=None):
self.name = 'Strategy Example 0'
if func is not None:
self.execute = types.MethodType(func, self)
def execute(self):
print(self.name)
&lt;/code>&lt;/pre>
&lt;p>def execute_replacement1(self):
print(self.name + &amp;rsquo; from execute 1')&lt;/p>
&lt;p>def execute_replacement2(self):
print(self.name + &amp;rsquo; from execute 2')&lt;/p>
&lt;p>if &lt;strong>name&lt;/strong> == &amp;lsquo;&lt;strong>main&lt;/strong>&amp;rsquo;:
strat0 = StrategyExample()&lt;/p>
&lt;pre>&lt;code>strat1 = StrategyExample(execute_replacement1)
strat1.name = 'Strategy Example 1'
strat2 = StrategyExample(execute_replacement2)
strat2.name = 'Strategy Example 2'
strat0.execute()
strat1.execute()
strat2.execute()
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### template / 模版
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">定义算法的框架，细节操作留给后人。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>点右上角！&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### visitor / 来访者
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="---coding-utf-8----1">-&lt;em>- coding: utf-8 -&lt;/em>-&lt;/h1>
&lt;p>from abc import abstractmethod&lt;/p>
&lt;p>class ComputerPart:&lt;/p>
&lt;pre>&lt;code>@abstractmethod
def accept(self, computer_part_visitor):
pass
&lt;/code>&lt;/pre>
&lt;p>class Monitor(ComputerPart):&lt;/p>
&lt;pre>&lt;code>def accept(self, computer_part_visitor):
computer_part_visitor.visit(self)
&lt;/code>&lt;/pre>
&lt;p>class KeyBoard(ComputerPart):&lt;/p>
&lt;pre>&lt;code>def accept(self, computer_part_visitor):
computer_part_visitor.visit(self)
&lt;/code>&lt;/pre>
&lt;p>class Mouse(ComputerPart):&lt;/p>
&lt;pre>&lt;code>def accept(self, computer_part_visitor):
computer_part_visitor.visit(self)
&lt;/code>&lt;/pre>
&lt;p>class Computer(ComputerPart):&lt;/p>
&lt;pre>&lt;code>def __init__(self):
self.parts = [Monitor(), KeyBoard(), Mouse()]
def accept(self, computer_part_visitor):
for part in self.parts:
part.accept(computer_part_visitor)
computer_part_visitor.visit(self)
&lt;/code>&lt;/pre>
&lt;p>class ComputerPartVisitor:&lt;/p>
&lt;pre>&lt;code>@abstractmethod
def visit(self, computer_visitor):
pass
&lt;/code>&lt;/pre>
&lt;p>class ComputerPartDisplayVisitor(ComputerPartVisitor):&lt;/p>
&lt;pre>&lt;code>def visit(self, computer_part):
print(&amp;quot;Display &amp;quot; + computer_part.__class__.__name__)
&lt;/code>&lt;/pre>
&lt;p>if &lt;strong>name&lt;/strong> == &amp;lsquo;&lt;strong>main&lt;/strong>&amp;rsquo;:
computer = Computer()
computer.accept(ComputerPartDisplayVisitor())&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>zsh git 插件内置别名一览表</title><link>http://blog.heyuhua.com/p/zsh-git-%E6%8F%92%E4%BB%B6%E5%86%85%E7%BD%AE%E5%88%AB%E5%90%8D%E4%B8%80%E8%A7%88%E8%A1%A8/</link><pubDate>Wed, 30 Aug 2017 18:46:37 +0000</pubDate><guid>http://blog.heyuhua.com/p/zsh-git-%E6%8F%92%E4%BB%B6%E5%86%85%E7%BD%AE%E5%88%AB%E5%90%8D%E4%B8%80%E8%A7%88%E8%A1%A8/</guid><description>&lt;p>一个14岁孩子经历的的任何事，都会让他铭记一生。—&amp;ndash;《lolita》&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>alias&lt;/th>
&lt;th>full command&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>g&lt;/td>
&lt;td>&lt;code>git&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ga&lt;/td>
&lt;td>&lt;code>git add&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gaa&lt;/td>
&lt;td>&lt;code>git add —all&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gapa&lt;/td>
&lt;td>&lt;code>git add —patch&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gau&lt;/td>
&lt;td>&lt;code>git add —update&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gb&lt;/td>
&lt;td>&lt;code>git branch&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gba&lt;/td>
&lt;td>&lt;code>git branch -a&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbd&lt;/td>
&lt;td>&lt;code>git branch -d&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbda&lt;/td>
&lt;td>&lt;code>git branch --no-color --merged | command grep -vE &amp;quot;^(\*|\s*(master|develop|dev)\s*$)&amp;quot; | command xargs -n 1 git branch -d&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbl&lt;/td>
&lt;td>&lt;code>git blame -b -w&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbnm&lt;/td>
&lt;td>&lt;code>git branch --no-merged&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbr&lt;/td>
&lt;td>&lt;code>git branch —remote&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbs&lt;/td>
&lt;td>&lt;code>git bisect&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbsb&lt;/td>
&lt;td>&lt;code>git bisect bad&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbsg&lt;/td>
&lt;td>&lt;code>git bisect good&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbsr&lt;/td>
&lt;td>&lt;code>git bisect reset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gbss&lt;/td>
&lt;td>&lt;code>git bisect start&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gc&lt;/td>
&lt;td>&lt;code>git commit -v&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gc!&lt;/td>
&lt;td>&lt;code>git commit -v —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcn!&lt;/td>
&lt;td>&lt;code>git commit -v --no-edit —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gca&lt;/td>
&lt;td>&lt;code>git commit -v -a&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gca!&lt;/td>
&lt;td>&lt;code>git commit -v -a —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcan!&lt;/td>
&lt;td>&lt;code>git commit -v -a --no-edit —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcans!&lt;/td>
&lt;td>&lt;code>git commit -v -a -s --no-edit —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcam&lt;/td>
&lt;td>&lt;code>git commit -a -m&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcsm&lt;/td>
&lt;td>&lt;code>git commit -s -m&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcb&lt;/td>
&lt;td>&lt;code>git checkout -b&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcf&lt;/td>
&lt;td>&lt;code>git config —list&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcl&lt;/td>
&lt;td>&lt;code>git clone —recursive&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gclean&lt;/td>
&lt;td>&lt;code>git clean -fd&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpristine&lt;/td>
&lt;td>&lt;code>git reset --hard &amp;amp;&amp;amp; git clean -dfx&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcm&lt;/td>
&lt;td>&lt;code>git checkout master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcd&lt;/td>
&lt;td>&lt;code>git checkout develop&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcmsg&lt;/td>
&lt;td>&lt;code>git commit -m&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gco&lt;/td>
&lt;td>&lt;code>git checkout&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcount&lt;/td>
&lt;td>&lt;code>git shortlog -sn&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcp&lt;/td>
&lt;td>&lt;code>git cherry-pick&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcpa&lt;/td>
&lt;td>&lt;code>git cherry-pick —abort&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcpc&lt;/td>
&lt;td>&lt;code>git cherry-pick —continue&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gcs&lt;/td>
&lt;td>&lt;code>git commit -S&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gd&lt;/td>
&lt;td>&lt;code>git diff&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gdca&lt;/td>
&lt;td>&lt;code>git diff —cached&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gdct&lt;/td>
&lt;td>&lt;code>git describe --tags git rev-list --tags --max-count=1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gdt&lt;/td>
&lt;td>&lt;code>git diff-tree --no-commit-id --name-only -r&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gdw&lt;/td>
&lt;td>&lt;code>git diff --word-diff&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gf&lt;/td>
&lt;td>&lt;code>git fetch&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gfa&lt;/td>
&lt;td>&lt;code>git fetch --all —prune&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gfo&lt;/td>
&lt;td>&lt;code>git fetch origin&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gg&lt;/td>
&lt;td>&lt;code>git gui citool&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gga&lt;/td>
&lt;td>&lt;code>git gui citool —amend&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ggpur&lt;/td>
&lt;td>&lt;code>ggu&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ggpull&lt;/td>
&lt;td>&lt;code>git pull origin $(git_current_branch)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ggpush&lt;/td>
&lt;td>&lt;code>git push origin $(git_current_branch)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ggsup&lt;/td>
&lt;td>&lt;code>git branch --set-upstream-to=origin/$(git_current_branch)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpsup&lt;/td>
&lt;td>&lt;code>git push --set-upstream origin $(git_current_branch)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ghh&lt;/td>
&lt;td>&lt;code>git help&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gignore&lt;/td>
&lt;td>&lt;code>git update-index --assume-unchanged&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gignored&lt;/td>
&lt;td>&lt;code>git ls-files -v | grep &amp;quot;^[[:lower:]]&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git-svn-dcommit-push&lt;/td>
&lt;td>&lt;code>git-svn-dcommit-push git svn dcommit &amp;amp;&amp;amp; git push github master:svntrunk&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gk&lt;/td>
&lt;td>&lt;code>\gitk --all —branches&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gke&lt;/td>
&lt;td>&lt;code>\gitk --all $(git log -g --pretty=%h)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gl&lt;/td>
&lt;td>&lt;code>git pull&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glg&lt;/td>
&lt;td>&lt;code>git log —stat&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glgp&lt;/td>
&lt;td>&lt;code>git log --stat -p&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glgg&lt;/td>
&lt;td>&lt;code>git log —graph&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glgga&lt;/td>
&lt;td>&lt;code>git log --graph --decorate —all&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glgm&lt;/td>
&lt;td>&lt;code>git log --graph --max-count=10&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glo&lt;/td>
&lt;td>&lt;code>git log --oneline —decorate&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glol&lt;/td>
&lt;td>&lt;code>git log --graph --pretty%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset --abbrev-commit&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glola&lt;/td>
&lt;td>&lt;code>git log --graph --pretty%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset--abbrev-commit —all&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glog&lt;/td>
&lt;td>&lt;code>git log --oneline --decorate —graph&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gloga&lt;/td>
&lt;td>&lt;code>git log --oneline --decorate --graph —all&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glp&lt;/td>
&lt;td>&lt;code>_git_log_prettily&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gm&lt;/td>
&lt;td>&lt;code>git merge&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gmom&lt;/td>
&lt;td>&lt;code>git merge origin/master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gmt&lt;/td>
&lt;td>&lt;code>git mergetool --no-prompt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gmtvim&lt;/td>
&lt;td>&lt;code>git mergetool --no-prompt --tool=vimdiff&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gmum&lt;/td>
&lt;td>&lt;code>git merge upstream/master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gp&lt;/td>
&lt;td>&lt;code>git push&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpd&lt;/td>
&lt;td>&lt;code>git push --dry-run&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpoat&lt;/td>
&lt;td>&lt;code>git push origin --all &amp;amp;&amp;amp; git push origin —tags&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpu&lt;/td>
&lt;td>&lt;code>git push upstream&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gpv&lt;/td>
&lt;td>&lt;code>git push -v&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gr&lt;/td>
&lt;td>&lt;code>git remote&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gra&lt;/td>
&lt;td>&lt;code>git remote add&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grb&lt;/td>
&lt;td>&lt;code>git rebase&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grba&lt;/td>
&lt;td>&lt;code>git rebase —abort&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grbc&lt;/td>
&lt;td>&lt;code>git rebase —continue&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grbi&lt;/td>
&lt;td>&lt;code>git rebase -i&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grbm&lt;/td>
&lt;td>&lt;code>git rebase master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grbs&lt;/td>
&lt;td>&lt;code>git rebase —skip&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grh&lt;/td>
&lt;td>&lt;code>git reset HEAD&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grhh&lt;/td>
&lt;td>&lt;code>git reset HEAD —hard&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grmv&lt;/td>
&lt;td>&lt;code>git remote rename&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grrm&lt;/td>
&lt;td>&lt;code>git remote remove&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grset&lt;/td>
&lt;td>&lt;code>git remote set-url&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grt&lt;/td>
&lt;td>&lt;code>cd $(git rev-parse --show-toplevel || echo &amp;quot;.&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gru&lt;/td>
&lt;td>&lt;code>git reset —&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grup&lt;/td>
&lt;td>&lt;code>git remote update&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grv&lt;/td>
&lt;td>&lt;code>git remote -v&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsb&lt;/td>
&lt;td>&lt;code>git status -sb&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsd&lt;/td>
&lt;td>&lt;code>git svn dcommit&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsi&lt;/td>
&lt;td>&lt;code>git submodule init&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsps&lt;/td>
&lt;td>&lt;code>git show --pretty=short --show-signature&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsr&lt;/td>
&lt;td>&lt;code>git svn rebase&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gss&lt;/td>
&lt;td>&lt;code>git status -s&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gst&lt;/td>
&lt;td>&lt;code>git status&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsta&lt;/td>
&lt;td>&lt;code>git stash save&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gstaa&lt;/td>
&lt;td>&lt;code>git stash apply&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gstc&lt;/td>
&lt;td>&lt;code>git stash clear&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gstd&lt;/td>
&lt;td>&lt;code>git stash drop&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gstl&lt;/td>
&lt;td>&lt;code>git stash list&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gstp&lt;/td>
&lt;td>&lt;code>git stash pop&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsts&lt;/td>
&lt;td>&lt;code>git stash show —text&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gsu&lt;/td>
&lt;td>&lt;code>git submodule update&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gts&lt;/td>
&lt;td>&lt;code>git tag -s&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gtv&lt;/td>
&lt;td>&lt;code>git tag | sort -V&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gunignore&lt;/td>
&lt;td>&lt;code>git update-index --no-assume-unchanged&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gunwip&lt;/td>
&lt;td>&lt;code>git log -n 1 | grep -q -c &amp;quot;\-\-wip\-\-&amp;quot; &amp;amp;&amp;amp; git reset HEAD~1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gup&lt;/td>
&lt;td>&lt;code>git pull —rebase&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gupv&lt;/td>
&lt;td>git pull &amp;ndash;rebase -v`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>glum&lt;/td>
&lt;td>&lt;code>git pull upstream master&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gwch&lt;/td>
&lt;td>&lt;code>git whatchanged -p --abbrev-commit --pretty=medium&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gwip&lt;/td>
&lt;td>&lt;code>git add -A; git rm $(git ls-files --deleted) 2&amp;gt; /dev/null; git commit --no-verify -m &amp;quot;--wip-- [skip ci]&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>利用lirc对松下空调遥控器指令的录制</title><link>http://blog.heyuhua.com/p/%E5%88%A9%E7%94%A8lirc%E5%AF%B9%E6%9D%BE%E4%B8%8B%E7%A9%BA%E8%B0%83%E9%81%A5%E6%8E%A7%E5%99%A8%E6%8C%87%E4%BB%A4%E7%9A%84%E5%BD%95%E5%88%B6/</link><pubDate>Mon, 14 Aug 2017 20:48:55 +0000</pubDate><guid>http://blog.heyuhua.com/p/%E5%88%A9%E7%94%A8lirc%E5%AF%B9%E6%9D%BE%E4%B8%8B%E7%A9%BA%E8%B0%83%E9%81%A5%E6%8E%A7%E5%99%A8%E6%8C%87%E4%BB%A4%E7%9A%84%E5%BD%95%E5%88%B6/</guid><description>&lt;p>听风听雨过七夕，愁草瘗花铭。对影双人中酒，交加晓梦啼莺。&lt;/p>
&lt;h3 id="前言">前言&lt;/h3>
&lt;p>7月份入职之后，一直在闲暇之余鼓捣树莓派。在制作联网空调遥控器的时候遇到了很多挫折。&lt;/p>
&lt;p>比如在录制的红外波谱中有莫名的不符合协议的极长时间空白。&lt;/p>
&lt;p>比如即使看上去正常的波普也不能被空调接收。&lt;/p>
&lt;p>写这篇文章是迫于无奈。实在是因为按网上的教程录制的空调遥控操作无法使用，而且仔细查看录制的数据发现与网上发布的差距较大。&lt;/p>
&lt;p>空调遥控器与电视机遥控器最大的区别就在于：其传输的红外信息都为复合信息集合，不像电视机遥控音量+就是音量+，换台就是换台。&lt;/p>
&lt;p>我的空调为Panasonsic中央变频空调，从遥控显示屏可以看出，其大概有以下几种信息：&lt;/p>
&lt;ul>
&lt;li>希望达到的温度&lt;/li>
&lt;li>空调模式（制冷，制热，自动，干燥）&lt;/li>
&lt;li>吹风模式：上中下 左右 扫风 自动&lt;/li>
&lt;li>风速&lt;/li>
&lt;li>定时开， 定时关&lt;/li>
&lt;/ul>
&lt;p>首先要明确一点，红外传输是一种单向协议，即遥控器只能向被控对象发送指令，但是并不会收到类似tcp协议一样的ack回执。&lt;/p>
&lt;p>为什么要在遥控空调时传输复合参数集合呢。这就考虑到空调与电视的使用方式不同。想象这样一个场景：你抱着西瓜躺在离电视3米的地方，按电视遥控器调低音量但是电视不响应，就只能把遥控器对准电视，往前伸手狂按，直到音量达到理想效果后继续躺尸。&lt;/p>
&lt;p>​ 但是如果你抱着西瓜躺在离空调5米的地方，觉得不够爽，想要空调大力制冷。这时使用类似电视机调低音量（&lt;code>减小10分贝&lt;/code>）的类似指令发送方式，你是不能明确手上的遥控器发送的无数&lt;code>降低1 °C&lt;/code> 的指令有多少成功发给了空调的接收器的。如此这般就很容易造成空调遥控器上的显示与实际制冷效果不同步（并很难重新同步）。耿直的工程师就决定一次发送能够描述空调全部需求状态的指令集。这样任意一次信号的成功送达都可以保证事务的一致性。（是一致性我没说错对吧。。。）&lt;/p>
&lt;hr>
&lt;h3 id="正文">正文&lt;/h3>
&lt;blockquote>
&lt;p>接下来是紧张刺激的操作环节。凸^-^凸&lt;/p>
&lt;/blockquote>
&lt;h4 id="一数据收集">一.数据收集&lt;/h4>
&lt;p>一些 值得记录的地方。&lt;/p>
&lt;ol>
&lt;li>据说有示波器会更好（但是我没有）&lt;/li>
&lt;li>首先要确保正确安装了LIRC包。&lt;/li>
&lt;li>如果有时间看一下 man mode2。在lirc社区找到的一些规较为范的remote control config 里大部分使用了 16进制记录方法，个人认为在肉眼读数时比单纯记录remote 的高低电平10进制读法更方便观察。&lt;/li>
&lt;li>网上大多数教程推荐在使用mode2 工具录制时， 关闭lircd服务。 &lt;code>sudo systemctl stop lircd.service&lt;/code>是在Arch 上正确关闭lirc服务的方法。录制完成后 &lt;code>sudo systemctl restart lircd.service&lt;/code>重新启动即可。（经常查看日志即服务运行状态 会帮你解决很多坑。）&lt;/li>
&lt;li>在做录制解析时最好先去了解一下红外传输协议。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>本来还想继续往下写的。 Arch arm 版 linux 4.9 内核升级后 i2c io无法使用。红外模块罢工。正在懊恼中。（于2017.08.27）&lt;/p>
&lt;/blockquote>
&lt;p>toDOtoDO&amp;hellip;.&lt;/p>
&lt;h3 id="续集-2019-03-22">续集。 2019-03-22&lt;/h3>
&lt;p>深圳开始变热了。 我不得不解决每天回家热成狗的问题了。 空调不能停！！！！！！！！！&lt;/p>
&lt;p>更重要的是， 我找到了能够稳定开启 I2c module 的办法。&lt;/p>
&lt;p>安装一些必要的东西：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pacman -S git python2 i2c-tools base-devel python2-distribute python2-pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装 PIGPIO 支持&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo pip2 install RPi.GPIO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>&lt;strong>安装raspi-config&lt;/strong>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo pacman -S xorg-xrandr libnewt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://aur.archlinux.org/raspi-config.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> raspi-config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">makepkg -i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后使用 Raspi-config 开启I2C&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo raspi-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="http://blog.heyuhua.com/p/%E5%88%A9%E7%94%A8lirc%E5%AF%B9%E6%9D%BE%E4%B8%8B%E7%A9%BA%E8%B0%83%E9%81%A5%E6%8E%A7%E5%99%A8%E6%8C%87%E4%BB%A4%E7%9A%84%E5%BD%95%E5%88%B6/arch-resp-config.png"
width="907"
height="610"
srcset="http://blog.heyuhua.com/p/%E5%88%A9%E7%94%A8lirc%E5%AF%B9%E6%9D%BE%E4%B8%8B%E7%A9%BA%E8%B0%83%E9%81%A5%E6%8E%A7%E5%99%A8%E6%8C%87%E4%BB%A4%E7%9A%84%E5%BD%95%E5%88%B6/arch-resp-config_hu771a6e9098d432e44887d939e87b2719_29306_480x0_resize_box_3.png 480w, http://blog.heyuhua.com/p/%E5%88%A9%E7%94%A8lirc%E5%AF%B9%E6%9D%BE%E4%B8%8B%E7%A9%BA%E8%B0%83%E9%81%A5%E6%8E%A7%E5%99%A8%E6%8C%87%E4%BB%A4%E7%9A%84%E5%BD%95%E5%88%B6/arch-resp-config_hu771a6e9098d432e44887d939e87b2719_29306_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="resp-config"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="356px"
>&lt;/p>
&lt;p>七夕快乐。&lt;/p></description></item><item><title>iterm2常用快捷键总结</title><link>http://blog.heyuhua.com/p/iterm2%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 07 Aug 2017 13:45:06 +0000</pubDate><guid>http://blog.heyuhua.com/p/iterm2%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/</guid><description>&lt;p>其实我不太喜欢用tmux, 就跟不喜欢用vim 一样。&lt;/p>
&lt;h2 id="iterm2-常用快捷键">iterm2 常用快捷键&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>新建标签&lt;/td>
&lt;td style="text-align:center">⌘ + T&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>切换标签&lt;/td>
&lt;td style="text-align:center">⌘ + 左／右／123&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>新建水平table&lt;/td>
&lt;td style="text-align:center">⌘ + D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>新建竖直table&lt;/td>
&lt;td style="text-align:center">⌘ + shift + D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>切换table&lt;/td>
&lt;td style="text-align:center">⌘ + [/]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>最大化最小化table&lt;/td>
&lt;td style="text-align:center">⌘ +shift+↵&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>关闭标签/关闭table&lt;/td>
&lt;td style="text-align:center">⌘ + W&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>在多个terminal间切换&lt;/td>
&lt;td style="text-align:center">⌘ +⌥ +123&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>清除当前行&lt;/td>
&lt;td style="text-align:center">ctrl + u&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>清屏1&lt;/td>
&lt;td style="text-align:center">ctrl + l&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>行首&lt;/td>
&lt;td style="text-align:center">ctrl + a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>行尾&lt;/td>
&lt;td style="text-align:center">ctrl + e&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>自定义跳单词&lt;/td>
&lt;td style="text-align:center">⌘ + 前后&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>删除当前单词&lt;/td>
&lt;td style="text-align:center">ctrl + w&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>搜索历史&lt;/td>
&lt;td style="text-align:center">ctrl + r&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>上条命令&lt;/td>
&lt;td style="text-align:center">ctrl + p&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>删除当前光标后的字母&lt;/td>
&lt;td style="text-align:center">ctrl + d&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>删除光标前的字母&lt;/td>
&lt;td style="text-align:center">ctrl + h&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>快速填密码&lt;/td>
&lt;td style="text-align:center">⌘ + ⌥ + F&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>其中自定义跳单词设置方法 : itrem2-&amp;gt; preferences -&amp;gt; keys -&amp;gt; 添加如下配置。&lt;/p>
&lt;p>&lt;img src="http://qiniu.heyuhua.com/item_command_1.png"
loading="lazy"
alt="command1"
>&lt;/p>
&lt;p>​&lt;/p>
&lt;p>​ &lt;img src="http://qiniu.heyuhua.com/item_command_2.png"
loading="lazy"
alt="command2"
>&lt;/p></description></item><item><title>raspberry pi3 ArchLinux 安装记录</title><link>http://blog.heyuhua.com/p/raspberry-pi3-archlinux-%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 26 Jul 2017 12:43:18 +0000</pubDate><guid>http://blog.heyuhua.com/p/raspberry-pi3-archlinux-%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</guid><description>&lt;!-- toc -->
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>某同事说：“Arch 操作系统的一大特点就是其pacman系统更新模块采用的是滚动更新模式（也就是说Arch理论上来说只有一个LTS版本）。只要你的操作得当，甚至可以从最古老的arch版本 升级到最新版，从linux 1.0内核升级到4.x内核。” 同事向我无脑推荐Arch之后不负责任的溜了。&lt;/p>
&lt;p>在实际操作中，你很快就会发现贱婢同事说的是对的，但是他只说了一半，留白是：&lt;em>&lt;code>”你很难操作得当。“&lt;/code>&lt;/em>&lt;/p>
&lt;p>Arch的滚动更新模式有着极其频繁的更新频率（需要你用同样频繁的&lt;code>pacman -Syu&lt;/code>来跟进远程仓库的更新），而当你累计的更新过多，就会很容易造成更新冲突。如果这些冲突中涉及到一些操作系统的敏感模块，如linux内核更新等，要务必详细了解冲突的内容。理智操作。&lt;/p>
&lt;p>我要为我的冲动负责。从新拿到我的树莓派，已经是3个月后，Pacman -Syu 更新提示&lt;code>ca-certificates-utils: /etc/ssl/certs/ca-certificates.crt exists in filesystem&lt;/code>&lt;/p>
&lt;p>查看 ca-certificate文件后感觉良好，冲动下使用了&lt;code>pacman -Syu --force&lt;/code> ，然而这次强制更新把我的bootloader写坏了。&lt;/p>
&lt;p>附上Arch 社区提供的一些正确解决方案。&lt;/p>
&lt;ul>
&lt;li>法 1&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>pacman -Syu &amp;ndash;ignore ca-certificates-utils&lt;/li>
&lt;li>pacman -S &amp;ndash;force ca-certificates-utils&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>法 2 （强制删除 ca-certificate-utils）&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>pacman -Syu &amp;ndash;ignore ca-certificates-utils&lt;/li>
&lt;li>rm /etc/ssl/certs/ca-certificates.crt&lt;/li>
&lt;li>pacman -S ca-certificates-utils&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>过去的就让它过去吧。&lt;/p>
&lt;p>详细做一次 raspberry pi 安装 Arch Linux 过程记录。&lt;/p>
&lt;h3 id="准备事项">准备事项&lt;/h3>
&lt;ul>
&lt;li>raspberry pi3 * 1&lt;/li>
&lt;li>sd card * 1&lt;/li>
&lt;li>读卡器 * 1&lt;/li>
&lt;li>&lt;a class="link" href="http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-3-latest.tar.gz" target="_blank" rel="noopener"
>Arch ARM 版操作系统&lt;/a>。（raspberry pi2 和pi3 的系统版本已经分开了，但是pi3 仍然可以安装 archarm-pi2 镜像）&lt;/li>
&lt;li>一个有linux操作系统的电脑:这里我使用一台树莓派作为烧录机。（没办法周围除了mac就是pi）&lt;/li>
&lt;li>你可能需要请提前安装 bsdtar 工具&lt;/li>
&lt;/ul>
&lt;p>很多人就会问，为什么你有mac可用还要强行用pi装b呢？&lt;/p>
&lt;p>A：mac的darwin系统并不支持 ext文件系统，所以无法对sd卡进行预期的磁盘操作。&lt;/p>
&lt;p>当然据说使用&lt;code>dd&lt;/code>命令可以无视这个问题。(找个img镜像)&lt;/p>
&lt;h3 id="安装大部分翻译自-arch-社区">安装(大部分翻译自 Arch 社区)&lt;/h3>
&lt;blockquote>
&lt;p>首先把sd卡插到读卡器里，然后把读卡器插到电脑上&amp;hellip;&amp;hellip;..&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$lsblk&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sda 8:0 &lt;span class="m">1&lt;/span> 29.8G &lt;span class="m">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─sda2 8:2 &lt;span class="m">1&lt;/span> 28G &lt;span class="m">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─sda3 8:3 &lt;span class="m">1&lt;/span> 1.7G &lt;span class="m">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─sda1 8:1 &lt;span class="m">1&lt;/span> 100M &lt;span class="m">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mmcblk0 179:0 &lt;span class="m">0&lt;/span> 29G &lt;span class="m">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─mmcblk0p2 179:2 &lt;span class="m">0&lt;/span> 28.9G &lt;span class="m">0&lt;/span> part /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─mmcblk0p1 179:1 &lt;span class="m">0&lt;/span> 41.7M &lt;span class="m">0&lt;/span> part /boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>列出你当前的磁盘。 显然sda磁盘没有挂载，正是我们要烧录的sd card。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo su
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>确保你的当前工作目录没有后顾之忧后可以开启管理员模式。（这个工作目录最好放置着预先下载好的&lt;a class="link" href="http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-3-latest.tar.gz" target="_blank" rel="noopener"
>arch操作系统&lt;/a>，并且保证有足够大的预留空间）&lt;/p>
&lt;p>开始给sd卡分区&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># fdisk /dev/sda&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>fdisk 有十分详细的引导教程，第一次安装可以尽可能详细的看一下其提示。&lt;/p>
&lt;h5 id="一-首先要做的是删除旧分区创建新分区">一. 首先要做的是删除旧分区，创建新分区：&lt;/h5>
&lt;ol>
&lt;li>键入 &lt;code>o&lt;/code> ,清空原有分区表。&lt;/li>
&lt;li>键入&lt;code>p&lt;/code> , 查看当前分区表状态，如果第一步操作正确，此处将不会列出 分区表。&lt;/li>
&lt;li>键入&lt;code>n&lt;/code> ,开始创建新分区，再键入p，创建主分区，再键入&lt;code>1&lt;/code> ,创建第一个。然后再按一次回车&lt;code>ENTER&lt;/code> 使用默认的扇区头地址。键入 &lt;code>+100M&lt;/code> 确定扇区尾。&lt;/li>
&lt;li>键入&lt;code>t&lt;/code> , 然后键入&lt;code>c&lt;/code>来设置第一块分区的文件系统类型为 FAT32(LBA)&lt;/li>
&lt;li>键入&lt;code>n&lt;/code> ,开始创建新分区，再键入p，创建主分区，再键入&lt;code>2&lt;/code> ,创建第2个。然后再按&lt;strong>两次&lt;/strong>&lt;code>ENTER&lt;/code> 分别选定默认的磁盘扇区头部和尾部。&lt;/li>
&lt;li>最后，键入&lt;code>w&lt;/code> 以保存分区表并退出 fdisk&lt;/li>
&lt;/ol>
&lt;h5 id="二-创建并挂载fat文件系统">二. 创建并挂载FAT文件系统。&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mkfs.vfat /dev/sda1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mount /dec/sda1 boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="三-创建并挂载ext4文件系统">三. 创建并挂载ext4文件系统&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mkfs.ext4 /dev/sda2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mount /dev/sda2 root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里的步骤可能需要等待，比如弹出&lt;code>Writing superblocks and filesystem accounting information:&lt;/code> 时。&lt;/p>
&lt;h5 id="四-提取root系统文件">四. 提取root系统文件&lt;/h5>
&lt;blockquote>
&lt;p>如果你现在还没有进入 root权限模式，这是最后的机会了。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">bsdtar -xpf ArchLinuxARM-rpi-3-latest.tar.gz -C root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="五-填充boot">五. 填充boot&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mv root/boot/* boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="六-弹出sd卡">六. 弹出sd卡&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">umount boot root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="七-将sd卡装入树莓派插电网线连路由器或者其他什么办法只要你能弄到ip">七. 将sd卡装入树莓派，插电，网线连路由器（或者其他什么办法只要你能弄到ip）&lt;/h5>
&lt;h5 id="八-从你的电脑上用ssh连接树莓派">八. 从你的电脑上用ssh连接树莓派&lt;/h5>
&lt;p>附初始用户表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">初始用户&lt;/th>
&lt;th style="text-align:left">用户名&lt;/th>
&lt;th>密码&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">alarm（普通用户，可远程登录）&lt;/td>
&lt;td style="text-align:left">alarm&lt;/td>
&lt;td>alarm&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">管理员（无ssh权限）&lt;/td>
&lt;td style="text-align:left">root&lt;/td>
&lt;td>root&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>arch默认不提供对dns的主机发布功能，即默认条件下无法使用 &lt;a class="link" href="mailto:user@raspberrypi.local" >user@raspberrypi.local&lt;/a> 连接树莓派。如有需求，&lt;a class="link" href="https://wiki.archlinux.org/index.php/Avahi" target="_blank" rel="noopener"
>移步&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;p>附带国内Archarm 加速镜像文件，覆盖 /etc/pacman.d/mirrorlist 文件即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Server list generated by rankmirrors on 2017-07-27
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">## China
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server = https://mirrors.ustc.edu.cn/archlinuxarm/$arch/$repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server = http://tw.mirror.archlinuxarm.org/$arch/$repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server = http://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/$arch/$repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server = http://mirrors.163.com/archlinuxarm/$arch/$repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>覆盖后记得马上 &lt;code>pacman -Syy&lt;/code>更新本地库 !&lt;/li>
&lt;li>如果更新后找不到想要的包，可以把第二个tw的官方mirror地址提到第一位。&lt;/li>
&lt;/ul></description></item><item><title>python 重修之旅（四）</title><link>http://blog.heyuhua.com/p/python-%E9%87%8D%E4%BF%AE%E4%B9%8B%E6%97%85%E5%9B%9B/</link><pubDate>Fri, 21 Jul 2017 16:28:18 +0000</pubDate><guid>http://blog.heyuhua.com/p/python-%E9%87%8D%E4%BF%AE%E4%B9%8B%E6%97%85%E5%9B%9B/</guid><description>&lt;blockquote>
&lt;p>我有一万个理由不用vim&amp;amp;emacs&lt;/p>
&lt;/blockquote>
&lt;!-- toc -->
&lt;h2 id="一-weakref----弱引用">一. weakref — 弱引用&lt;/h2>
&lt;p>weakref 模块 让我们可以在coding时 为对象添加弱引用&lt;/p>
&lt;p>&lt;em>referent&lt;/em>： 一个被弱引用的对象&lt;/p>
&lt;p>相对一个hard reference(强引用）来说 ，对象的弱引用无法让对象保持活动态：当对象的剩余引用全部引用为弱引用时，gc可以销毁该弱引用对象并释放内存空间。另一个特性是，在该对象被完全销毁前，你仍然可以放肆的调用它。（当然你不会知道它返回的到底是该对象还是一个错误。。。）&lt;/p>
&lt;p>弱引用的主要被用来设计 放置大对象的映射表／缓存空间。&lt;/p>
&lt;p>举个栗子：&lt;/p>
&lt;p>​ 🌰&lt;/p>
&lt;p>ʕ •ᴥ•ʔ&lt;/p>
&lt;p>如果有很多庞大的二进制图形对象，而你希望将每个图像与一个名字做关联。如果使用传统的dict字典来映射name : image， 或者 image : name, 这些图形对象将会一直被保持在内存中。于是乎 &lt;code>WeakKeyDictionary&lt;/code> 和 &lt;code>WeakValueDictionary&lt;/code> 类型应运而生。他们分别支持 对于 dict 中 key值和value的weakref。（让 image 在一个WeakKeyDictionary 字典中充当key| 让 image 在 WeakValueDictionary字典中充当value）&lt;/p>
&lt;p>在 python 3.4 中 weakref 添加了一个注册清理函数的回调入口 &lt;code>finalize&lt;/code>(def finalize(fund, *arg, **kargs)) . 这个回调会在弱引用对象被gc时调用。 类似于__del__ magic 方法，该回调的异常可以在标准输出中显示，但是不能被传播。&lt;/p>
&lt;h2 id="二-unittestmock--虚假对象">二. unittest.mock — 虚假对象&lt;/h2>
&lt;p>&lt;code>unittest.mock&lt;/code> 大多被应用在python的测试中。你可以将程序中的某些部分用mock对象进行替换，并断言／定制其表现。&lt;/p>
&lt;p>Python3.5内置了mock模块（unites.mock), 其常用 方式为 指定返回值（reaturn_value）, 指定hook返回函数 &lt;code>side_effect&lt;/code>, 和 上下文控制方法 &lt;code>mock.patch&lt;/code>。&lt;/p>
&lt;p>在工作项目中，同事们采用了 pytest搭建集成测试环境，其中的&lt;code>monkeypatch&lt;/code>工作原理与mock相似。但monkeypatch更局限于对指定模块或对象进行patch，mock的丰富接口还可以应用在项目的profile及其他更多应用场景中。&lt;/p>
&lt;h2 id="三-collections-高级容器数据类型">三. collections 高级容器数据类型&lt;/h2>
&lt;p>python2.7时期的 collections 包括 &lt;code>nametuple&lt;/code>, &lt;code>deque&lt;/code>, &lt;code>ChainMap&lt;/code> , &lt;code>Counter&lt;/code>,&lt;code>OrderDict&lt;/code>,&lt;code>defaultdict&lt;/code>, 在 python3中添加了&lt;code>UserDict&lt;/code>, &lt;code>UserList&lt;/code>,&lt;code> UserString&lt;/code>三个类型 。&lt;/p>
&lt;h3 id="1-chainmap链表映射">1. ChainMap（链表映射）&lt;/h3>
&lt;p>ChainMap总会让人想到数据结构。然后想起大一写c链表的美好时光。当然也会想起iteratortools 的 chain。&lt;/p>
&lt;p>ChainMap 可以快速的对多个传入的dict 或map 进行 链接link，返回一个可以当作单一单元的对象。&lt;/p>
&lt;p>当没有映射被传入时，ChainMap会默认返回空dict。&lt;/p>
&lt;p>所有传入的映射都会被储存在一个列表中，可以使用ChainMap的&lt;code>maps&lt;/code> 属性进行查看和编辑。如果该列表中的元素被更改， chainmap由于对该属性的依赖，其展示内容也会相应改变。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">Collection&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ChainMap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChainMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">locals&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nb">globals&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new_child&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ChainMap&lt;/span>&lt;span class="p">({},&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maps&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​&lt;/p>
&lt;h3 id="2-counter计数器">2. Counter（计数器）&lt;/h3>
&lt;p>有时候你会觉得找工作的时候面试官问的问题都特别简单，比如说问到文件的词频统计，可能只会想到用dict或者collections.defaultdict 来维护一个计数字典。&lt;/p>
&lt;p>The pythonic way should be：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Counter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 哈姆莱特戏剧的词频&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;\w+&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hamlet.txt&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">words&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">most_common&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;the&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1143&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;and&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">966&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;to&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">762&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;of&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">669&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;i&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">631&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;you&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">554&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">546&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;my&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">514&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hamlet&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">471&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;in&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">451&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Counter的dict接口设计在请求访问不存在key对应value时并不会抛出KeyError异常，而是会返回&lt;code>0&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">counts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">counts&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>三个实用方法 python3.1+。&lt;/p>
&lt;p>&lt;code>most_common(n)&lt;/code> 返回频度最高的前n个计数对象，及频数。&lt;/p>
&lt;p>&lt;code>elements()&lt;/code>会返回一个迭代器，如果将迭代器转化成list， 每个counter记录的元素都会在list中出现其对应的频数次数，而且无序。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>c&lt;/code>.elements() 可能是 abb， 也可能是 bba， 还可能是 bab。&lt;/p>
&lt;p>&lt;code>subtract()&lt;/code> 方法接收可迭代对象或映射，在原有counter对象上进行相应的减法操作。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">=-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># c update to Counter({&amp;#39;a&amp;#39;: 3, &amp;#39;b&amp;#39;: 0, &amp;#39;c&amp;#39;: -3, &amp;#39;d&amp;#39;: -6})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Counter 实现了大部分的dict接口，except：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>fromkeys()&lt;/code> 并没有被实现&lt;/p>
&lt;ul>
&lt;li>&lt;code>update()&lt;/code>对传入的可迭代对象进行计数，将结果加入到原对象。&lt;/li>
&lt;/ul>
&lt;p>​&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>在python3.3+ 中， Counter 还重载了位亦或及加减运算符号。（不忍心继续抄文档了）记住： &lt;code>-&lt;/code>跟&lt;code>subtract()&lt;/code>不一样， &lt;code>&amp;amp;&lt;/code>取左右最小， &lt;code>|&lt;/code>取左右最大。 单一&lt;code>+&lt;/code> ,&lt;code>-&lt;/code>号起计数筛选作用。&lt;/p>
&lt;h3 id="3-deque双向队列">3. deque（双向队列）&lt;/h3>
&lt;p>这玩意披着deque的羊皮干着list的活。&lt;/p>
&lt;p>用法：deque([iterable[, maxlen]])&lt;/p>
&lt;p>deque的特性是围绕maxlen这一参数的，所以不定义maxlen的deque还不如list。。。因为list为变长list做了内存优化，而且list下标访问更快。&lt;/p>
&lt;p>讨论一下在maxlen定义了之后的情况。当deque满，向任意一端添加数据（&lt;code>append&lt;/code>,&lt;code>appendleft&lt;/code>） 都会导致相反方向的一端数据被pop，这一特性可以被用在类似实时交易监控，unix tail原型实现等等&lt;/p>
&lt;p>内置方法：&lt;code>append()&lt;/code>右端添加，&lt;code>appendleft()&lt;/code>左端添加， &lt;code>clear()&lt;/code>清空队列，&lt;code>copy()&lt;/code>浅拷贝（new in 3.5）&amp;hellip;&lt;/p>
&lt;p>&lt;code>count(x)&lt;/code> :记录等于 x 的元素个数。&lt;/p>
&lt;p>&lt;code>extend(iter)&lt;/code> 向队列右侧批量插入。左侧插入则有&lt;code>extendleft()&lt;/code>&lt;/p>
&lt;p>&lt;code>index(x)&lt;/code>获取元素坐标，还可以添加start，stop参数选定查找范围。&lt;/p>
&lt;p>&lt;code>insert(i,x)&lt;/code>将元素x插入到队列的i位置。&lt;/p>
&lt;p>&lt;code>pop()&lt;/code>,&lt;code>popleft()&lt;/code> 分别从队列右侧， 左侧去除元素，如果队列空抛出异常。&lt;/p>
&lt;p>&lt;code>remove(x)&lt;/code>删除第一个匹配到的元素x&lt;/p>
&lt;p>&lt;code>reverse()&lt;/code>反转&lt;/p>
&lt;p>&lt;code>rotate()&lt;/code> 轮转&lt;/p>
&lt;p>一些官方使用实例：&lt;/p>
&lt;p>Linux tail 的最简实现。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">log_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path_to_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">log_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 得到了文件的最后十行。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>求滑动平均／移动平均（拓展到求卷积什么的。。）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">moving_average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iterable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># moving_average([40, 30, 50, 46, 39, 44]) --&amp;gt; 40.0 42.0 45.0 43.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># http://en.wikipedia.org/wiki/Moving_average&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">iter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">iterable&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 转换为迭代类型&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">itertools&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">islice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># 初始化 deque([40, 30])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appendleft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 填充空数据。 deque([0, 40, 30])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">elem&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># it = iter([50, 46, 39, 44])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">elem&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elem&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">yield&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-defaultdict-字典工厂">4. defaultdict （字典工厂）&lt;/h3>
&lt;p>一个内建数据类型 dict 的子类， 在dict的基础上重构了一个内建方法， 并添加了一个可编辑的实例变量。&lt;/p>
&lt;p>some cookies&lt;/p>
&lt;p>利用 defaultdict of list 将一个key-value 序列分组。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sol&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;男&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;vici&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;女&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Rancho&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;中性&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Littlekey&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;男&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Guido&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;女&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;某徐某xuan&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defaultdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sol&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;中性&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Littlekey&amp;#39;&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;女&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Rancho&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;某徐某xuan&amp;#39;&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;男&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;vici&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Guido&amp;#39;&lt;/span>&lt;span class="p">])]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当dict中的某个键不存在且被调用时，defaultdict会使用默认工厂进行初始化， 比如上面的例子在进行遍历sol中的第一个元素时， d[k] 操作会生成一个空list与相应的k形成映射。&lt;/p>
&lt;p>承接一下Counter的部分，本宝宝之前做文件字数统计用的就是defaultdict。。。&lt;/p>
&lt;h3 id="5-namedtuple命名元组工厂">5. namedtuple（命名元组工厂）&lt;/h3>
&lt;p>快速实现简单结构体的不二之选。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">People&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">namedtuple&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;People&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;name age birth school&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">People&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;vici&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;0701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;WHUT&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">People&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vici&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">birth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;0701&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">school&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;WHUT&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">school&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;WHUT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">17&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">name&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然是用带空格的字符串来区分named_field 只是为了展示 python的强大语法糖，文档推荐使用&lt;code>[name, age, birth, school]&lt;/code>的传参方式创建工厂。&lt;/p>
&lt;p>nametuple很适合做一些结构化数据，类似sql查询，csv，sqlite3等等。&lt;/p>
&lt;p>直接抄袭文档实例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">EmployeeRecord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">namedtuple&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;EmployeeRecord&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;name, age, title, department, paygrade&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EmployeeRecord&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_make&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;employees.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">))):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">emp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sqlite3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">conn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sqlite3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/companydata&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cursor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">conn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cursor&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cursor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SELECT name, age, title, department, paygrade FROM employees&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EmployeeRecord&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_make&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cursor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetchall&lt;/span>&lt;span class="p">()):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">emp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">emp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里用到了一个classmethod &lt;code>_make(iterable)&lt;/code>：从一个 iterable对象新建实例，&lt;/p>
&lt;p>其他实例方法；&lt;/p>
&lt;p>&lt;code>_asdist()&lt;/code> 返回一个 orderedDict，存放字段名及其对应value.&lt;/p>
&lt;p>&lt;code>_replace()&lt;/code>修改tumple值。&lt;/p>
&lt;p>&lt;code>_source&lt;/code>该属性返回可交由&lt;code>exec()&lt;/code>执行的基于当前python版本的python源码。&lt;/p>
&lt;p>&lt;code>_fields&lt;/code>返回包含所有字段名的tuple.可用与多个namedtuple的快速合并。&lt;/p>
&lt;p>类似什么作为继承类和添加&lt;code>__doc__ &lt;/code>的咸鱼操作懒得写了。&lt;/p>
&lt;h3 id="6-ordereddict有序字典">6. OrderedDict（有序字典）&lt;/h3>
&lt;p>就是有序字典嘛，有什么好说的凸^-^凸。难道这玩意怎么用你心里还没点b数嘛？&lt;/p>
&lt;p>除了所有的dict的方法，python3.1后还添加了两个鸡肋方法&lt;code>popitem()&lt;/code> &amp;amp; &lt;code>move_to_end(key)&lt;/code>, 前者会返回并删除对象的最后一个键值对，后者会把key挪到字典最后。&lt;/p>
&lt;h3 id="7-userdict-userlist-userstring-集合类型包装对象">7. UserDict, UserList, UserString 集合类型包装对象&lt;/h3>
&lt;p>python3之前这些类型作为单独module独立存在，在python3后被整合进collections module，其他的一些抽象Mixin class类似 &lt;code>MutableMapping&lt;/code> 则被迁移到了&lt;code>collections.abc&lt;/code>module.&lt;/p>
&lt;p>如果想要创建一个dict的子类，直接继承dict而不要继承UserDict，你好我好大家好。&lt;/p>
&lt;p>我觉得&lt;a class="link" href="http://www.dongwm.com/archives/UserDict%E3%80%81UserString%E3%80%81UserList%E5%AD%98%E5%9C%A8%E7%9A%84%E6%84%8F%E4%B9%89/" target="_blank" rel="noopener"
>dongweiming博客里的事件&lt;/a>实在是极端。见仁见智，世界和平～&lt;/p>
&lt;h5 id="不算题外的题外话">不算题外的题外话：&lt;/h5>
&lt;p>我忍了很久了（于2017-08-09 00:27）&lt;/p>
&lt;p>入职新公司后我又一次陷入了鄙视链：emacs &amp;gt; vim &amp;gt; ide&lt;/p>
&lt;p>如果有谁还敢用这种鄙视链搞我，我只想抽出我40米的长刀，让你丫先跑39米再算账。&lt;/p>
&lt;p>第一次用vi类的编辑器是高中时候无聊给家里电脑装了个ubuntu, 万能的网友说nano不如vim好用，从此入了vim的坑（不过我承认这么多年过去了我vim也就是入门水平），当时久觉得这玩意真特么难用老要切换读写。连个关闭按钮都没有，bulabula&amp;hellip;&lt;/p>
&lt;p>但是后来习惯后，我觉得用vim写c要比windows上的vc6.0好用多了。大学接触了visual studio 2013／15（写c#)，JetBrains IDEA (写java 和android)，就几乎放弃使用编辑器了。&lt;/p>
&lt;p>我现在写python。&lt;/p>
&lt;p>我就不信你们用vim的能一个command+b跳转到 redis.lock.Lock 方法的源码， 我就不信你能删除上一行的时候下一行的缩进还能跟着自动修改。我不信你n多个项目都带virtualenv的时候还能给你一个相应版本的python console／ipython table。&lt;/p>
&lt;p>我就是喜欢ide占用我cpu30%时候的样子。电脑卡只能怪你的电脑差。&lt;/p>
&lt;p>用vim666的大佬本宝宝心里佩服的，但是我写代码是为了自己爽，who care why are you so diao？pycharm pro让我有飞一样的感觉，犹如激光枪，vim最多算是勾践剑，只可砍瓜切菜，而我可以把你轰杀至渣。&lt;/p>
&lt;p>当然我也在pycharm里加了vim插件，有本事你打我啊。&lt;/p>
&lt;p>这可能是一个互相骂傻b，然后慢慢把自己变成傻b的故事。&lt;/p></description></item><item><title>pyenv 常用命令</title><link>http://blog.heyuhua.com/p/pyenv-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Thu, 20 Apr 2017 17:54:00 +0000</pubDate><guid>http://blog.heyuhua.com/p/pyenv-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;blockquote>
&lt;p>明日再有风雨，明日再作打算&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Tip：每次使用brew 安装后注意认真阅读安装信息，或者使用 brew info 命令查看。&lt;/strong>&lt;/p>
&lt;h2 id="安装卸载">安装/卸载&lt;/h2>
&lt;blockquote>
&lt;h3 id="安装">安装&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ brew update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ brew install pyen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ brew upgrade pyenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>upgrade&lt;/em> 可以用来更新 pyenv&lt;/p>
&lt;blockquote>
&lt;h3 id="卸载">卸载&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> brew uninstall pyenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常规使用">常规使用&lt;/h2>
&lt;blockquote>
&lt;h3 id="列出所有可安装python版本">列出所有可安装python版本&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv install --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="安装-1">安装&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv install 3.6.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="查看现有版本">查看现有版本&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv versions
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="设置全局环境">设置全局环境&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv global 3.6.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="设置当前目录环境">设置当前目录环境&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv local 2.7.13
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="查看当前目录使用版本">查看当前目录使用版本&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h3 id="删除某个版本">删除某个版本&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv uninstall 2.7.10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="pyenv-virtualenv">pyenv-virtualenv&lt;/h2>
&lt;blockquote>
&lt;h3 id="安装-2">安装&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">brew install pyenv-virtualenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>似乎还需要添加参数到 你的 &lt;code>.bashrc/.zshrc&lt;/code>里,详见&lt;code>brew info pyenv-vritualenv&lt;/code>&lt;/p>
&lt;blockquote>
&lt;h3 id="创建一个虚拟环境">创建一个虚拟环境&lt;/h3>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pyenv virtualenv 3.6.0 tensorlering-env-3.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上述命令会在 &lt;code>pyenv root&lt;/code> 目录下生成新的基于&lt;code>3.6.0&lt;/code>虚拟环境&lt;code>tensorflow-env-3.6&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;h3 id="为虚拟环境的pip加速国内用户">为虚拟环境的pip加速（国内用户）&lt;/h3>
&lt;/blockquote>
&lt;p>出于某些原因，pip安装依赖包有辣么一点点慢。
将默认源替换为豆瓣源是个很好的选择（https://pypi.doubanio.com/simple）&lt;/p>
&lt;p>不同于普通的pip配置（将pip源写入 ~/.pip/pip.conf）,virtualenv 的pip配置需要写入到 &lt;code>(pyenv root)/虚拟环境名／pip.conf&lt;/code>下。
比如我的tensorlearing-env 环境的pip配置文件就位于：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/usr/local/Cellar/pyenv/1.0.7/versions/3.6.0/envs/tensorlering-env-3.6/pip.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>pip.conf&lt;/strong> 内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[global]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">timeout = 60
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index-url = https://pypi.doubanio.com/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>go 入门（day 1）</title><link>http://blog.heyuhua.com/p/go-%E5%85%A5%E9%97%A8day-1/</link><pubDate>Fri, 10 Mar 2017 16:20:49 +0000</pubDate><guid>http://blog.heyuhua.com/p/go-%E5%85%A5%E9%97%A8day-1/</guid><description>&lt;blockquote>
&lt;p>Hello world!&lt;/p>
&lt;/blockquote>
&lt;h1 id="go-tour-部分习题">go tour 部分习题&lt;/h1>
&lt;blockquote>
&lt;h2 id="slice">slice&lt;/h2>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;golang.org/x/tour/pic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;math&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Pic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dy&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">uint8&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">myret&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([][]&lt;/span>&lt;span class="kt">uint8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dy&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">dy&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">myret&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">uint8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dx&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">dx&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="nx">j&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">myret&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">uint8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">myret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pic&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Show&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Pic&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h2 id="maps">maps&lt;/h2>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;golang.org/x/tour/wc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">WordCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">words&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">myret&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">word&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">words&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">myret&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">word&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">myret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">wc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">WordCount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;h2 id="exercise-fibonacci-closurego">exercise-fibonacci-closure.go&lt;/h2>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// fibonacci is a function that returns
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// a function that returns an int.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">fibonacci&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ret&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">start&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">start&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">next&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">ret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">f&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">fibonacci&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr></description></item><item><title>celery任务分发-术业有专攻的worker们</title><link>http://blog.heyuhua.com/p/celery%E4%BB%BB%E5%8A%A1%E5%88%86%E5%8F%91-%E6%9C%AF%E4%B8%9A%E6%9C%89%E4%B8%93%E6%94%BB%E7%9A%84worker%E4%BB%AC/</link><pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate><guid>http://blog.heyuhua.com/p/celery%E4%BB%BB%E5%8A%A1%E5%88%86%E5%8F%91-%E6%9C%AF%E4%B8%9A%E6%9C%89%E4%B8%93%E6%94%BB%E7%9A%84worker%E4%BB%AC/</guid><description>&lt;p>本事借的钱，为什么要还？&lt;/p>
&lt;blockquote>
&lt;p>此文章脱胎于我在stackoverflow的某回答&lt;/p>
&lt;/blockquote>
&lt;h1 id="celery-高阶用法">celery 高阶用法&lt;/h1>
&lt;h2 id="需求">需求&lt;/h2>
&lt;p>项目需要多个任务队列进行任务分发，每个队列的任务都会请求获取某种资源。
CTO大人给的建议是使用线程模型自己维护队列。（说实话我当时就怒了） 什么年代了？昂？当然我并没有为此而辞职&lt;/p>
&lt;h2 id="环境">环境&lt;/h2>
&lt;ul>
&lt;li>linux (Centos/ubuntu/arch)&lt;/li>
&lt;li>pyhon 2.7&lt;/li>
&lt;li>celery 任务队列中间件(djcelery 及flask 都适用)&lt;/li>
&lt;/ul>
&lt;h2 id="干活">干活&lt;/h2>
&lt;h3 id="celery-worker-部署代码">celery worker 部署代码&lt;/h3>
&lt;p>下面的代码实现了：&lt;/p>
&lt;ul>
&lt;li>生成了一堆以&lt;code>w_*&lt;/code> 命名的 worker 和 以 &lt;code>q_*&lt;/code>命名的任务队列，限制各个worker的并发数及绑定worker 与队列
&lt;ul>
&lt;li>&lt;code>w_celery&lt;/code> 负责默认&lt;code>celery&lt;/code>队列，并发数为10，&lt;/li>
&lt;li>剩下的worker 都为单线程任务， 绑定各自的任务队列&lt;/li>
&lt;li>&lt;code>-A celery_worker.celery&lt;/code> 表明了任务内容&lt;/li>
&lt;li>&lt;code>-Q celery&lt;/code> 设置了默认队列为 celery&lt;/li>
&lt;li>&lt;code>--pidfile&lt;/code>,&lt;code>--logfile&lt;/code> 定义了进程文件及日志名称规范及存放地点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">celery multi start w_celery w_sas w_aosp w_avpro w_pw764 w_pw786 w_pxp w_cwxp w_cw786 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-c &lt;span class="m">1&lt;/span> -A celery_worker.celery -l debug -Q celery --pidfile&lt;span class="o">=&lt;/span>/tmp/celery_%n.pid --logfile&lt;span class="o">=&lt;/span>/tmp/celery_%n.log &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_celery celery -c:w_celery &lt;span class="m">10&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_sas q_sas &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_aosp q_aosp &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_avpro q_avpro &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_pw764 q_pw764 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_pw786 q_pw786 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_pxp q_pxp &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_cwxp q_cwxp &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-Q:w_cw786 q_cw786
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="task定义及调用方法示例">task定义及调用方法示例&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 定义
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@celery.task
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def sub_sas(*args):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 申请某独占资源
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 如何在调用时绑定queue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def sub():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sub_sas.apply_async(args=(), queue=&amp;#39;q_sas&amp;#39;) # 将sas任务 提交到q_sas 队列，从而交由w_sas 实现
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过这样的绑定即可实现worker的术业专攻，并通过上下文控制（with）独占资源的锁&lt;/p>
&lt;p>老哥稳！&lt;/p></description></item><item><title>为什么要开个人博客</title><link>http://blog.heyuhua.com/p/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link><pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate><guid>http://blog.heyuhua.com/p/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid><description>&lt;blockquote>
&lt;p>副标题+ 内容缩略：好看的皮囊千篇一律，有趣的人200多斤。想变的有趣还是得多吃多睡。。。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ChangeLog&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">「&lt;/span>&lt;span class="mi">2017&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="err">」&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">生成框架迁移到&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">hugo&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">「&lt;/span>&lt;span class="mi">2017&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="err">」&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">主题迁移到&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hugo&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tranquilpeak&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="为什么要开这个博客">为什么要开这个博客&lt;/h2>
&lt;ul>
&lt;li>之前有在csdn 和cnblog 写过博客，作为一个永远18岁的小正太，它们无法跟我一起保持青春&lt;/li>
&lt;li>写了很多工作笔记存在印象，在考虑一点一点把它们公开，而且我很有先见之明的留下了markdown底稿&lt;/li>
&lt;li>我想证明一件事：你永远都会觉得“1年前的我是个sb.” 而不是老的时候觉得”我年轻的时候就像个sb.”&lt;/li>
&lt;li>副标题为随机Unicode编码组合，由本人随机生成。&lt;/li>
&lt;/ul></description></item><item><title>某工程师的工作（经验）总结</title><link>http://blog.heyuhua.com/p/%E6%9F%90%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate><guid>http://blog.heyuhua.com/p/%E6%9F%90%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E5%B7%A5%E4%BD%9C%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid><description>&lt;p>禅师寻一鸡，系绳于其足。拉绳，鸡倒而复起，如此有八。吾问：汝教我锲而不舍？答曰：No, 拉鸡八倒。&lt;/p>
&lt;h2 id="如果你是一个高端全栈工程师并且负责某产品的研发">如果你是一个&lt;code>高端&lt;/code>全栈工程师并且负责某产品的研发&lt;/h2>
&lt;ul>
&lt;li>写后端api就不要想着前端怎么调用方便&lt;/li>
&lt;li>写前端就不要想后端怎么写方便&lt;/li>
&lt;li>以上两条起码会保证你的接口足够的simple.&lt;/li>
&lt;li>永远不要为了方便把任何model 放在view 模块&lt;/li>
&lt;li>改队友的代码一定要给ticket&lt;/li>
&lt;li>跪求某大神做review&lt;/li>
&lt;/ul>
&lt;p>###　接口设计尽量灵活
栗子：
如果有函数需要传入保存日志的地址&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">logpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logpath&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 从args 获取参数保存&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 尽量处理 不存在目录，相对路径 给定文件名（带后缀）的情况&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="其他">其他&lt;/h3>
&lt;ul>
&lt;li>exception 尽量不要输出变量内容&lt;/li>
&lt;li>interface 设计的默认参数尽量不要设为null 或者其他无意义的值&lt;/li>
&lt;/ul>
&lt;h2 id="跟大屌们一起工作的注意事项">跟大屌们一起工作的注意事项&lt;/h2>
&lt;blockquote>
&lt;p>工作在传统安全行业一线的工程师们都有些怪毛病，他们可能熟读linux kernel源码，精通windows 驱动，还有很多老罗（罗升阳）一样研究
Android 源码的苦行僧。但是对底层的过度熟悉会带来一些好玩的事情。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>写汇编c 出身的大哥们会质疑python解释器，如果它们让你们查错，记得想想python和c的区别&lt;/li>
&lt;/ul>
&lt;p>对面大哥甚至在python强行添加context级别的&lt;code>goto&lt;/code>语法&lt;/p>
&lt;p>keep your self.&lt;/p>
&lt;h2 id="当你是一个team中developer的时候于2017-11-30">当你是一个team中developer的时候（于2017-11-30）&lt;/h2>
&lt;blockquote>
&lt;p>当好一颗螺丝钉&lt;/p>
&lt;/blockquote></description></item></channel></rss>